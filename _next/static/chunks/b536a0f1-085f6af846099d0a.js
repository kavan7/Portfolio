"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[689],{7776:function(t,e,i){let r;i.d(e,{uEv:function(){return n}});let n=2202,s="srgb",a="srgb-linear",o="display-p3-linear",h="linear",l="srgb",u="rec709";class c{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});let i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;let i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;let i=this._listeners[t];if(void 0!==i){let t=i.indexOf(e);-1!==t&&i.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;let e=this._listeners[t.type];if(void 0!==e){t.target=this;let i=e.slice(0);for(let e=0,r=i.length;e<r;e++)i[e].call(this,t);t.target=null}}}let d=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function p(){let t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(d[255&t]+d[t>>8&255]+d[t>>16&255]+d[t>>24&255]+"-"+d[255&e]+d[e>>8&255]+"-"+d[e>>16&15|64]+d[e>>24&255]+"-"+d[63&i|128]+d[i>>8&255]+"-"+d[i>>16&255]+d[i>>24&255]+d[255&r]+d[r>>8&255]+d[r>>16&255]+d[r>>24&255]).toLowerCase()}function m(t,e,i){return Math.max(e,Math.min(i,t))}function f(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw Error("Invalid component type.")}}function g(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw Error("Invalid component type.")}}class y{constructor(t=0,e=0){y.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){let e=this.x,i=this.y,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6],this.y=r[1]*e+r[4]*i+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){let e=Math.sqrt(this.lengthSq()*t.lengthSq());return 0===e?Math.PI/2:Math.acos(m(this.dot(t)/e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){let e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){let i=Math.cos(e),r=Math.sin(e),n=this.x-t.x,s=this.y-t.y;return this.x=n*i-s*r+t.x,this.y=n*r+s*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class x{constructor(t,e,i,r,n,s,a,o,h){x.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,e,i,r,n,s,a,o,h)}set(t,e,i,r,n,s,a,o,h){let l=this.elements;return l[0]=t,l[1]=r,l[2]=a,l[3]=e,l[4]=n,l[5]=o,l[6]=i,l[7]=s,l[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){let e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){let e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){let i=t.elements,r=e.elements,n=this.elements,s=i[0],a=i[3],o=i[6],h=i[1],l=i[4],u=i[7],c=i[2],d=i[5],p=i[8],m=r[0],f=r[3],g=r[6],y=r[1],x=r[4],_=r[7],v=r[2],b=r[5],w=r[8];return n[0]=s*m+a*y+o*v,n[3]=s*f+a*x+o*b,n[6]=s*g+a*_+o*w,n[1]=h*m+l*y+u*v,n[4]=h*f+l*x+u*b,n[7]=h*g+l*_+u*w,n[2]=c*m+d*y+p*v,n[5]=c*f+d*x+p*b,n[8]=c*g+d*_+p*w,this}multiplyScalar(t){let e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){let t=this.elements,e=t[0],i=t[1],r=t[2],n=t[3],s=t[4],a=t[5],o=t[6],h=t[7],l=t[8];return e*s*l-e*a*h-i*n*l+i*a*o+r*n*h-r*s*o}invert(){let t=this.elements,e=t[0],i=t[1],r=t[2],n=t[3],s=t[4],a=t[5],o=t[6],h=t[7],l=t[8],u=l*s-a*h,c=a*o-l*n,d=h*n-s*o,p=e*u+i*c+r*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);let m=1/p;return t[0]=u*m,t[1]=(r*h-l*i)*m,t[2]=(a*i-r*s)*m,t[3]=c*m,t[4]=(l*e-r*o)*m,t[5]=(r*n-a*e)*m,t[6]=d*m,t[7]=(i*o-h*e)*m,t[8]=(s*e-i*n)*m,this}transpose(){let t;let e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){let e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,r,n,s,a){let o=Math.cos(n),h=Math.sin(n);return this.set(i*o,i*h,-i*(o*s+h*a)+s+t,-r*h,r*o,-r*(-h*s+o*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(_.makeScale(t,e)),this}rotate(t){return this.premultiply(_.makeRotation(-t)),this}translate(t,e){return this.premultiply(_.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){let e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){let e=this.elements,i=t.elements;for(let t=0;t<9;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){let i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}let _=new x;function v(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;let b={},w=new x().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),M=new x().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),S={[a]:{transfer:h,primaries:u,luminanceCoefficients:[.2126,.7152,.0722],toReference:t=>t,fromReference:t=>t},[s]:{transfer:l,primaries:u,luminanceCoefficients:[.2126,.7152,.0722],toReference:t=>t.convertSRGBToLinear(),fromReference:t=>t.convertLinearToSRGB()},[o]:{transfer:h,primaries:"p3",luminanceCoefficients:[.2289,.6917,.0793],toReference:t=>t.applyMatrix3(M),fromReference:t=>t.applyMatrix3(w)},"display-p3":{transfer:l,primaries:"p3",luminanceCoefficients:[.2289,.6917,.0793],toReference:t=>t.convertSRGBToLinear().applyMatrix3(M),fromReference:t=>t.applyMatrix3(w).convertLinearToSRGB()}},z=new Set([a,o]),A={enabled:!0,_workingColorSpace:a,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(colorSpace){if(!z.has(colorSpace))throw Error(`Unsupported working color space, "${colorSpace}".`);this._workingColorSpace=colorSpace},convert:function(t,e,i){if(!1===this.enabled||e===i||!e||!i)return t;let r=S[e].toReference;return(0,S[i].fromReference)(r(t))},fromWorkingColorSpace:function(t,e){return this.convert(t,this._workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this._workingColorSpace)},getPrimaries:function(t){return S[t].primaries},getTransfer:function(t){return""===t?h:S[t].transfer},getLuminanceCoefficients:function(t,e=this._workingColorSpace){return t.fromArray(S[e].luminanceCoefficients)}};function C(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function P(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class T{static getDataURL(t){let e;if(/^data:/i.test(t.src)||"undefined"==typeof HTMLCanvasElement)return t.src;if(t instanceof HTMLCanvasElement)e=t;else{void 0===r&&(r=v("canvas")),r.width=t.width,r.height=t.height;let i=r.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=r}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){let e=v("canvas");e.width=t.width,e.height=t.height;let i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);let r=i.getImageData(0,0,t.width,t.height),n=r.data;for(let t=0;t<n.length;t++)n[t]=255*C(n[t]/255);return i.putImageData(r,0,0),e}if(!t.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t;{let e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*C(e[t]/255)):e[t]=C(e[t]);return{data:e,width:t.width,height:t.height}}}}let E=0;class k{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:E++}),this.uuid=p(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){let e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];let i={uuid:this.uuid,url:""},r=this.data;if(null!==r){let t;if(Array.isArray(r)){t=[];for(let e=0,i=r.length;e<i;e++)r[e].isDataTexture?t.push(N(r[e].image)):t.push(N(r[e]))}else t=N(r);i.url=t}return e||(t.images[this.uuid]=i),i}}function N(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?T.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let R=0;class O extends c{constructor(t=O.DEFAULT_IMAGE,e=O.DEFAULT_MAPPING,i=1001,r=1001,n=1006,s=1008,a=1023,o=1009,h=O.DEFAULT_ANISOTROPY,l=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:R++}),this.uuid=p(),this.name="",this.source=new k(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=r,this.magFilter=n,this.minFilter=s,this.anisotropy=h,this.format=a,this.internalFormat=null,this.type=o,this.offset=new y(0,0),this.repeat=new y(1,1),this.center=new y(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new x,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=l,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){let e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];let i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){!0===t&&this.pmremVersion++}}O.DEFAULT_IMAGE=null,O.DEFAULT_MAPPING=300,O.DEFAULT_ANISOTROPY=1;class I{constructor(t=0,e=0,i=0,r=1){I.prototype.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,r){return this.x=t,this.y=e,this.z=i,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){let e=this.x,i=this.y,r=this.z,n=this.w,s=t.elements;return this.x=s[0]*e+s[4]*i+s[8]*r+s[12]*n,this.y=s[1]*e+s[5]*i+s[9]*r+s[13]*n,this.z=s[2]*e+s[6]*i+s[10]*r+s[14]*n,this.w=s[3]*e+s[7]*i+s[11]*r+s[15]*n,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);let e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,r,n;let s=t.elements,a=s[0],o=s[4],h=s[8],l=s[1],u=s[5],c=s[9],d=s[2],p=s[6],m=s[10];if(.01>Math.abs(o-l)&&.01>Math.abs(h-d)&&.01>Math.abs(c-p)){if(.1>Math.abs(o+l)&&.1>Math.abs(h+d)&&.1>Math.abs(c+p)&&.1>Math.abs(a+u+m-3))return this.set(1,0,0,0),this;e=Math.PI;let t=(a+1)/2,s=(u+1)/2,f=(m+1)/2,g=(o+l)/4,y=(h+d)/4,x=(c+p)/4;return t>s&&t>f?t<.01?(i=0,r=.707106781,n=.707106781):(r=g/(i=Math.sqrt(t)),n=y/i):s>f?s<.01?(i=.707106781,r=0,n=.707106781):(i=g/(r=Math.sqrt(s)),n=x/r):f<.01?(i=.707106781,r=.707106781,n=0):(i=y/(n=Math.sqrt(f)),r=x/n),this.set(i,r,n,e),this}let f=Math.sqrt((p-c)*(p-c)+(h-d)*(h-d)+(l-o)*(l-o));return .001>Math.abs(f)&&(f=1),this.x=(p-c)/f,this.y=(h-d)/f,this.z=(l-o)/f,this.w=Math.acos((a+u+m-1)/2),this}setFromMatrixPosition(t){let e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class B{constructor(t=0,e=0,i=0,r=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=r}static slerpFlat(t,e,i,r,n,s,a){let o=i[r+0],h=i[r+1],l=i[r+2],u=i[r+3],c=n[s+0],d=n[s+1],p=n[s+2],m=n[s+3];if(0===a){t[e+0]=o,t[e+1]=h,t[e+2]=l,t[e+3]=u;return}if(1===a){t[e+0]=c,t[e+1]=d,t[e+2]=p,t[e+3]=m;return}if(u!==m||o!==c||h!==d||l!==p){let t=1-a,e=o*c+h*d+l*p+u*m,i=e>=0?1:-1,r=1-e*e;if(r>Number.EPSILON){let n=Math.sqrt(r),s=Math.atan2(n,e*i);t=Math.sin(t*s)/n,a=Math.sin(a*s)/n}let n=a*i;if(o=o*t+c*n,h=h*t+d*n,l=l*t+p*n,u=u*t+m*n,t===1-a){let t=1/Math.sqrt(o*o+h*h+l*l+u*u);o*=t,h*=t,l*=t,u*=t}}t[e]=o,t[e+1]=h,t[e+2]=l,t[e+3]=u}static multiplyQuaternionsFlat(t,e,i,r,n,s){let a=i[r],o=i[r+1],h=i[r+2],l=i[r+3],u=n[s],c=n[s+1],d=n[s+2],p=n[s+3];return t[e]=a*p+l*u+o*d-h*c,t[e+1]=o*p+l*c+h*u-a*d,t[e+2]=h*p+l*d+a*c-o*u,t[e+3]=l*p-a*u-o*c-h*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,r){return this._x=t,this._y=e,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){let i=t._x,r=t._y,n=t._z,s=t._order,a=Math.cos,o=Math.sin,h=a(i/2),l=a(r/2),u=a(n/2),c=o(i/2),d=o(r/2),p=o(n/2);switch(s){case"XYZ":this._x=c*l*u+h*d*p,this._y=h*d*u-c*l*p,this._z=h*l*p+c*d*u,this._w=h*l*u-c*d*p;break;case"YXZ":this._x=c*l*u+h*d*p,this._y=h*d*u-c*l*p,this._z=h*l*p-c*d*u,this._w=h*l*u+c*d*p;break;case"ZXY":this._x=c*l*u-h*d*p,this._y=h*d*u+c*l*p,this._z=h*l*p+c*d*u,this._w=h*l*u-c*d*p;break;case"ZYX":this._x=c*l*u-h*d*p,this._y=h*d*u+c*l*p,this._z=h*l*p-c*d*u,this._w=h*l*u+c*d*p;break;case"YZX":this._x=c*l*u+h*d*p,this._y=h*d*u+c*l*p,this._z=h*l*p-c*d*u,this._w=h*l*u-c*d*p;break;case"XZY":this._x=c*l*u-h*d*p,this._y=h*d*u-c*l*p,this._z=h*l*p+c*d*u,this._w=h*l*u+c*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!0===e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){let i=e/2,r=Math.sin(i);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){let e=t.elements,i=e[0],r=e[4],n=e[8],s=e[1],a=e[5],o=e[9],h=e[2],l=e[6],u=e[10],c=i+a+u;if(c>0){let t=.5/Math.sqrt(c+1);this._w=.25/t,this._x=(l-o)*t,this._y=(n-h)*t,this._z=(s-r)*t}else if(i>a&&i>u){let t=2*Math.sqrt(1+i-a-u);this._w=(l-o)/t,this._x=.25*t,this._y=(r+s)/t,this._z=(n+h)/t}else if(a>u){let t=2*Math.sqrt(1+a-i-u);this._w=(n-h)/t,this._x=(r+s)/t,this._y=.25*t,this._z=(o+l)/t}else{let t=2*Math.sqrt(1+u-i-a);this._w=(s-r)/t,this._x=(n+h)/t,this._y=(o+l)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0):(this._x=0,this._y=-t.z,this._z=t.y)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x),this._w=i,this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(m(this.dot(t),-1,1)))}rotateTowards(t,e){let i=this.angleTo(t);return 0===i||this.slerp(t,Math.min(1,e/i)),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){let i=t._x,r=t._y,n=t._z,s=t._w,a=e._x,o=e._y,h=e._z,l=e._w;return this._x=i*l+s*a+r*h-n*o,this._y=r*l+s*o+n*a-i*h,this._z=n*l+s*h+i*o-r*a,this._w=s*l-i*a-r*o-n*h,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);let i=this._x,r=this._y,n=this._z,s=this._w,a=s*t._w+i*t._x+r*t._y+n*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=s,this._x=i,this._y=r,this._z=n,this;let o=1-a*a;if(o<=Number.EPSILON){let t=1-e;return this._w=t*s+e*this._w,this._x=t*i+e*this._x,this._y=t*r+e*this._y,this._z=t*n+e*this._z,this.normalize(),this}let h=Math.sqrt(o),l=Math.atan2(h,a),u=Math.sin((1-e)*l)/h,c=Math.sin(e*l)/h;return this._w=s*u+this._w*c,this._x=i*u+this._x*c,this._y=r*u+this._y*c,this._z=n*u+this._z*c,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){let t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),i=Math.random(),r=Math.sqrt(1-i),n=Math.sqrt(i);return this.set(r*Math.sin(t),r*Math.cos(t),n*Math.sin(e),n*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class V{constructor(t=0,e=0,i=0){V.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return void 0===i&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(U.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(U.setFromAxisAngle(t,e))}applyMatrix3(t){let e=this.x,i=this.y,r=this.z,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6]*r,this.y=n[1]*e+n[4]*i+n[7]*r,this.z=n[2]*e+n[5]*i+n[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){let e=this.x,i=this.y,r=this.z,n=t.elements,s=1/(n[3]*e+n[7]*i+n[11]*r+n[15]);return this.x=(n[0]*e+n[4]*i+n[8]*r+n[12])*s,this.y=(n[1]*e+n[5]*i+n[9]*r+n[13])*s,this.z=(n[2]*e+n[6]*i+n[10]*r+n[14])*s,this}applyQuaternion(t){let e=this.x,i=this.y,r=this.z,n=t.x,s=t.y,a=t.z,o=t.w,h=2*(s*r-a*i),l=2*(a*e-n*r),u=2*(n*i-s*e);return this.x=e+o*h+s*u-a*l,this.y=i+o*l+a*h-n*u,this.z=r+o*u+n*l-s*h,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){let e=this.x,i=this.y,r=this.z,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*r,this.y=n[1]*e+n[5]*i+n[9]*r,this.z=n[2]*e+n[6]*i+n[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){let i=t.x,r=t.y,n=t.z,s=e.x,a=e.y,o=e.z;return this.x=r*o-n*a,this.y=n*s-i*o,this.z=i*a-r*s,this}projectOnVector(t){let e=t.lengthSq();if(0===e)return this.set(0,0,0);let i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return L.copy(this).projectOnVector(t),this.sub(L)}reflect(t){return this.sub(L.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){let e=Math.sqrt(this.lengthSq()*t.lengthSq());return 0===e?Math.PI/2:Math.acos(m(this.dot(t)/e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){let e=this.x-t.x,i=this.y-t.y,r=this.z-t.z;return e*e+i*i+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){let r=Math.sin(e)*t;return this.x=r*Math.sin(i),this.y=Math.cos(e)*t,this.z=r*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){let e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){let e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=r,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let t=Math.random()*Math.PI*2,e=2*Math.random()-1,i=Math.sqrt(1-e*e);return this.x=i*Math.cos(t),this.y=e,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}let L=new V,U=new B;class D{constructor(t=new V(Infinity,Infinity,Infinity),e=new V(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(q.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(q.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){let i=q.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);let i=t.geometry;if(void 0!==i){let r=i.getAttribute("position");if(!0===e&&void 0!==r&&!0!==t.isInstancedMesh)for(let e=0,i=r.count;e<i;e++)!0===t.isMesh?t.getVertexPosition(e,q):q.fromBufferAttribute(r,e),q.applyMatrix4(t.matrixWorld),this.expandByPoint(q);else void 0!==t.boundingBox?(null===t.boundingBox&&t.computeBoundingBox(),W.copy(t.boundingBox)):(null===i.boundingBox&&i.computeBoundingBox(),W.copy(i.boundingBox)),W.applyMatrix4(t.matrixWorld),this.union(W)}let r=t.children;for(let t=0,i=r.length;t<i;t++)this.expandByObject(r[t],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,q),q.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(X),Q.subVectors(this.max,X),J.subVectors(t.a,X),H.subVectors(t.b,X),j.subVectors(t.c,X),G.subVectors(H,J),Z.subVectors(j,H),Y.subVectors(J,j);let e=[0,-G.z,G.y,0,-Z.z,Z.y,0,-Y.z,Y.y,G.z,0,-G.x,Z.z,0,-Z.x,Y.z,0,-Y.x,-G.y,G.x,0,-Z.y,Z.x,0,-Y.y,Y.x,0];return!!(tt(e,J,H,j,Q)&&tt(e=[1,0,0,0,1,0,0,0,1],J,H,j,Q))&&(K.crossVectors(G,Z),tt(e=[K.x,K.y,K.z],J,H,j,Q))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,q).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(q).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(F[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),F[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),F[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),F[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),F[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),F[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),F[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),F[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(F)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}let F=[new V,new V,new V,new V,new V,new V,new V,new V],q=new V,W=new D,J=new V,H=new V,j=new V,G=new V,Z=new V,Y=new V,X=new V,Q=new V,K=new V,$=new V;function tt(t,e,i,r,n){for(let s=0,a=t.length-3;s<=a;s+=3){$.fromArray(t,s);let a=n.x*Math.abs($.x)+n.y*Math.abs($.y)+n.z*Math.abs($.z),o=e.dot($),h=i.dot($),l=r.dot($);if(Math.max(-Math.max(o,h,l),Math.min(o,h,l))>a)return!1}return!0}let te=new D,ti=new V,tr=new V;class tn{constructor(t=new V,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){let i=this.center;void 0!==e?i.copy(e):te.setFromPoints(t).getCenter(i);let r=0;for(let e=0,n=t.length;e<n;e++)r=Math.max(r,i.distanceToSquared(t[e]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){let e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){let i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?t.makeEmpty():(t.set(this.center,this.center),t.expandByScalar(this.radius)),t}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;ti.subVectors(t,this.center);let e=ti.lengthSq();if(e>this.radius*this.radius){let t=Math.sqrt(e),i=(t-this.radius)*.5;this.center.addScaledVector(ti,i/t),this.radius+=i}return this}union(t){return t.isEmpty()||(this.isEmpty()?this.copy(t):!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(tr.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(ti.copy(t.center).add(tr)),this.expandByPoint(ti.copy(t.center).sub(tr)))),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}let ts=new V,ta=new V,to=new V,th=new V,tl=new V,tu=new V,tc=new V;class td{constructor(t,e,i,r,n,s,a,o,h,l,u,c,d,p,m,f){td.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,e,i,r,n,s,a,o,h,l,u,c,d,p,m,f)}set(t,e,i,r,n,s,a,o,h,l,u,c,d,p,m,f){let g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=r,g[1]=n,g[5]=s,g[9]=a,g[13]=o,g[2]=h,g[6]=l,g[10]=u,g[14]=c,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new td().fromArray(this.elements)}copy(t){let e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){let e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){let e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){let e=this.elements,i=t.elements,r=1/tp.setFromMatrixColumn(t,0).length(),n=1/tp.setFromMatrixColumn(t,1).length(),s=1/tp.setFromMatrixColumn(t,2).length();return e[0]=i[0]*r,e[1]=i[1]*r,e[2]=i[2]*r,e[3]=0,e[4]=i[4]*n,e[5]=i[5]*n,e[6]=i[6]*n,e[7]=0,e[8]=i[8]*s,e[9]=i[9]*s,e[10]=i[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){let e=this.elements,i=t.x,r=t.y,n=t.z,s=Math.cos(i),a=Math.sin(i),o=Math.cos(r),h=Math.sin(r),l=Math.cos(n),u=Math.sin(n);if("XYZ"===t.order){let t=s*l,i=s*u,r=a*l,n=a*u;e[0]=o*l,e[4]=-o*u,e[8]=h,e[1]=i+r*h,e[5]=t-n*h,e[9]=-a*o,e[2]=n-t*h,e[6]=r+i*h,e[10]=s*o}else if("YXZ"===t.order){let t=o*l,i=o*u,r=h*l,n=h*u;e[0]=t+n*a,e[4]=r*a-i,e[8]=s*h,e[1]=s*u,e[5]=s*l,e[9]=-a,e[2]=i*a-r,e[6]=n+t*a,e[10]=s*o}else if("ZXY"===t.order){let t=o*l,i=o*u,r=h*l,n=h*u;e[0]=t-n*a,e[4]=-s*u,e[8]=r+i*a,e[1]=i+r*a,e[5]=s*l,e[9]=n-t*a,e[2]=-s*h,e[6]=a,e[10]=s*o}else if("ZYX"===t.order){let t=s*l,i=s*u,r=a*l,n=a*u;e[0]=o*l,e[4]=r*h-i,e[8]=t*h+n,e[1]=o*u,e[5]=n*h+t,e[9]=i*h-r,e[2]=-h,e[6]=a*o,e[10]=s*o}else if("YZX"===t.order){let t=s*o,i=s*h,r=a*o,n=a*h;e[0]=o*l,e[4]=n-t*u,e[8]=r*u+i,e[1]=u,e[5]=s*l,e[9]=-a*l,e[2]=-h*l,e[6]=i*u+r,e[10]=t-n*u}else if("XZY"===t.order){let t=s*o,i=s*h,r=a*o,n=a*h;e[0]=o*l,e[4]=-u,e[8]=h*l,e[1]=t*u+n,e[5]=s*l,e[9]=i*u-r,e[2]=r*u-i,e[6]=a*l,e[10]=n*u+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(tf,t,tg)}lookAt(t,e,i){let r=this.elements;return t_.subVectors(t,e),0===t_.lengthSq()&&(t_.z=1),t_.normalize(),ty.crossVectors(i,t_),0===ty.lengthSq()&&(1===Math.abs(i.z)?t_.x+=1e-4:t_.z+=1e-4,t_.normalize(),ty.crossVectors(i,t_)),ty.normalize(),tx.crossVectors(t_,ty),r[0]=ty.x,r[4]=tx.x,r[8]=t_.x,r[1]=ty.y,r[5]=tx.y,r[9]=t_.y,r[2]=ty.z,r[6]=tx.z,r[10]=t_.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){let i=t.elements,r=e.elements,n=this.elements,s=i[0],a=i[4],o=i[8],h=i[12],l=i[1],u=i[5],c=i[9],d=i[13],p=i[2],m=i[6],f=i[10],g=i[14],y=i[3],x=i[7],_=i[11],v=i[15],b=r[0],w=r[4],M=r[8],S=r[12],z=r[1],A=r[5],C=r[9],P=r[13],T=r[2],E=r[6],k=r[10],N=r[14],R=r[3],O=r[7],I=r[11],B=r[15];return n[0]=s*b+a*z+o*T+h*R,n[4]=s*w+a*A+o*E+h*O,n[8]=s*M+a*C+o*k+h*I,n[12]=s*S+a*P+o*N+h*B,n[1]=l*b+u*z+c*T+d*R,n[5]=l*w+u*A+c*E+d*O,n[9]=l*M+u*C+c*k+d*I,n[13]=l*S+u*P+c*N+d*B,n[2]=p*b+m*z+f*T+g*R,n[6]=p*w+m*A+f*E+g*O,n[10]=p*M+m*C+f*k+g*I,n[14]=p*S+m*P+f*N+g*B,n[3]=y*b+x*z+_*T+v*R,n[7]=y*w+x*A+_*E+v*O,n[11]=y*M+x*C+_*k+v*I,n[15]=y*S+x*P+_*N+v*B,this}multiplyScalar(t){let e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){let t=this.elements,e=t[0],i=t[4],r=t[8],n=t[12],s=t[1],a=t[5],o=t[9],h=t[13],l=t[2],u=t[6],c=t[10],d=t[14],p=t[3];return p*(+n*o*u-r*h*u-n*a*c+i*h*c+r*a*d-i*o*d)+t[7]*(+e*o*d-e*h*c+n*s*c-r*s*d+r*h*l-n*o*l)+t[11]*(+e*h*u-e*a*d-n*s*u+i*s*d+n*a*l-i*h*l)+t[15]*(-r*a*l-e*o*u+e*a*c+r*s*u-i*s*c+i*o*l)}transpose(){let t;let e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(t,e,i){let r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=i),this}invert(){let t=this.elements,e=t[0],i=t[1],r=t[2],n=t[3],s=t[4],a=t[5],o=t[6],h=t[7],l=t[8],u=t[9],c=t[10],d=t[11],p=t[12],m=t[13],f=t[14],g=t[15],y=u*f*h-m*c*h+m*o*d-a*f*d-u*o*g+a*c*g,x=p*c*h-l*f*h-p*o*d+s*f*d+l*o*g-s*c*g,_=l*m*h-p*u*h+p*a*d-s*m*d-l*a*g+s*u*g,v=p*u*o-l*m*o-p*a*c+s*m*c+l*a*f-s*u*f,b=e*y+i*x+r*_+n*v;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let w=1/b;return t[0]=y*w,t[1]=(m*c*n-u*f*n-m*r*d+i*f*d+u*r*g-i*c*g)*w,t[2]=(a*f*n-m*o*n+m*r*h-i*f*h-a*r*g+i*o*g)*w,t[3]=(u*o*n-a*c*n-u*r*h+i*c*h+a*r*d-i*o*d)*w,t[4]=x*w,t[5]=(l*f*n-p*c*n+p*r*d-e*f*d-l*r*g+e*c*g)*w,t[6]=(p*o*n-s*f*n-p*r*h+e*f*h+s*r*g-e*o*g)*w,t[7]=(s*c*n-l*o*n+l*r*h-e*c*h-s*r*d+e*o*d)*w,t[8]=_*w,t[9]=(p*u*n-l*m*n-p*i*d+e*m*d+l*i*g-e*u*g)*w,t[10]=(s*m*n-p*a*n+p*i*h-e*m*h-s*i*g+e*a*g)*w,t[11]=(l*a*n-s*u*n-l*i*h+e*u*h+s*i*d-e*a*d)*w,t[12]=v*w,t[13]=(l*m*r-p*u*r+p*i*c-e*m*c-l*i*f+e*u*f)*w,t[14]=(p*a*r-s*m*r-p*i*o+e*m*o+s*i*f-e*a*f)*w,t[15]=(s*u*r-l*a*r+l*i*o-e*u*o-s*i*c+e*a*c)*w,this}scale(t){let e=this.elements,i=t.x,r=t.y,n=t.z;return e[0]*=i,e[4]*=r,e[8]*=n,e[1]*=i,e[5]*=r,e[9]*=n,e[2]*=i,e[6]*=r,e[10]*=n,e[3]*=i,e[7]*=r,e[11]*=n,this}getMaxScaleOnAxis(){let t=this.elements;return Math.sqrt(Math.max(t[0]*t[0]+t[1]*t[1]+t[2]*t[2],t[4]*t[4]+t[5]*t[5]+t[6]*t[6],t[8]*t[8]+t[9]*t[9]+t[10]*t[10]))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){let e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){let e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){let e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){let i=Math.cos(e),r=Math.sin(e),n=1-i,s=t.x,a=t.y,o=t.z,h=n*s,l=n*a;return this.set(h*s+i,h*a-r*o,h*o+r*a,0,h*a+r*o,l*a+i,l*o-r*s,0,h*o-r*a,l*o+r*s,n*o*o+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,r,n,s){return this.set(1,i,n,0,t,1,s,0,e,r,1,0,0,0,0,1),this}compose(t,e,i){let r=this.elements,n=e._x,s=e._y,a=e._z,o=e._w,h=n+n,l=s+s,u=a+a,c=n*h,d=n*l,p=n*u,m=s*l,f=s*u,g=a*u,y=o*h,x=o*l,_=o*u,v=i.x,b=i.y,w=i.z;return r[0]=(1-(m+g))*v,r[1]=(d+_)*v,r[2]=(p-x)*v,r[3]=0,r[4]=(d-_)*b,r[5]=(1-(c+g))*b,r[6]=(f+y)*b,r[7]=0,r[8]=(p+x)*w,r[9]=(f-y)*w,r[10]=(1-(c+m))*w,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,i){let r=this.elements,n=tp.set(r[0],r[1],r[2]).length(),s=tp.set(r[4],r[5],r[6]).length(),a=tp.set(r[8],r[9],r[10]).length();0>this.determinant()&&(n=-n),t.x=r[12],t.y=r[13],t.z=r[14],tm.copy(this);let o=1/n,h=1/s,l=1/a;return tm.elements[0]*=o,tm.elements[1]*=o,tm.elements[2]*=o,tm.elements[4]*=h,tm.elements[5]*=h,tm.elements[6]*=h,tm.elements[8]*=l,tm.elements[9]*=l,tm.elements[10]*=l,e.setFromRotationMatrix(tm),i.x=n,i.y=s,i.z=a,this}makePerspective(t,e,i,r,n,s,a=2e3){let o,h;let l=this.elements;if(2e3===a)o=-(s+n)/(s-n),h=-2*s*n/(s-n);else if(2001===a)o=-s/(s-n),h=-s*n/(s-n);else throw Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=2*n/(e-t),l[4]=0,l[8]=(e+t)/(e-t),l[12]=0,l[1]=0,l[5]=2*n/(i-r),l[9]=(i+r)/(i-r),l[13]=0,l[2]=0,l[6]=0,l[10]=o,l[14]=h,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(t,e,i,r,n,s,a=2e3){let o,h;let l=this.elements,u=1/(e-t),c=1/(i-r),d=1/(s-n);if(2e3===a)o=(s+n)*d,h=-2*d;else if(2001===a)o=n*d,h=-1*d;else throw Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*u,l[4]=0,l[8]=0,l[12]=-((e+t)*u),l[1]=0,l[5]=2*c,l[9]=0,l[13]=-((i+r)*c),l[2]=0,l[6]=0,l[10]=h,l[14]=-o,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(t){let e=this.elements,i=t.elements;for(let t=0;t<16;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){let i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}let tp=new V,tm=new td,tf=new V(0,0,0),tg=new V(1,1,1),ty=new V,tx=new V,t_=new V,tv=new td,tb=new B;class tw{constructor(t=0,e=0,i=0,r=tw.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,r=this._order){return this._x=t,this._y=e,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){let r=t.elements,n=r[0],s=r[4],a=r[8],o=r[1],h=r[5],l=r[9],u=r[2],c=r[6],d=r[10];switch(e){case"XYZ":this._y=Math.asin(m(a,-1,1)),.9999999>Math.abs(a)?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-s,n)):(this._x=Math.atan2(c,h),this._z=0);break;case"YXZ":this._x=Math.asin(-m(l,-1,1)),.9999999>Math.abs(l)?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,h)):(this._y=Math.atan2(-u,n),this._z=0);break;case"ZXY":this._x=Math.asin(m(c,-1,1)),.9999999>Math.abs(c)?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-s,h)):(this._y=0,this._z=Math.atan2(o,n));break;case"ZYX":this._y=Math.asin(-m(u,-1,1)),.9999999>Math.abs(u)?(this._x=Math.atan2(c,d),this._z=Math.atan2(o,n)):(this._x=0,this._z=Math.atan2(-s,h));break;case"YZX":this._z=Math.asin(m(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-u,n)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-m(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(c,h),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-l,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return tv.makeRotationFromQuaternion(t),this.setFromRotationMatrix(tv,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return tb.setFromEuler(this),this.setFromQuaternion(tb,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}tw.DEFAULT_ORDER="XYZ";class tM{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!=0}isEnabled(t){return(this.mask&(1<<t|0))!=0}}let tS=0,tz=new V,tA=new B,tC=new td,tP=new V,tT=new V,tE=new V,tk=new B,tN=new V(1,0,0),tR=new V(0,1,0),tO=new V(0,0,1),tI={type:"added"},tB={type:"removed"},tV={type:"childadded",child:null},tL={type:"childremoved",child:null};class tU extends c{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:tS++}),this.uuid=p(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=tU.DEFAULT_UP.clone();let t=new V,e=new tw,i=new B,r=new V(1,1,1);e._onChange(function(){i.setFromEuler(e,!1)}),i._onChange(function(){e.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new td},normalMatrix:{value:new x}}),this.matrix=new td,this.matrixWorld=new td,this.matrixAutoUpdate=tU.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=tU.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new tM,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return tA.setFromAxisAngle(t,e),this.quaternion.multiply(tA),this}rotateOnWorldAxis(t,e){return tA.setFromAxisAngle(t,e),this.quaternion.premultiply(tA),this}rotateX(t){return this.rotateOnAxis(tN,t)}rotateY(t){return this.rotateOnAxis(tR,t)}rotateZ(t){return this.rotateOnAxis(tO,t)}translateOnAxis(t,e){return tz.copy(t).applyQuaternion(this.quaternion),this.position.add(tz.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(tN,t)}translateY(t){return this.translateOnAxis(tR,t)}translateZ(t){return this.translateOnAxis(tO,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(tC.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?tP.copy(t):tP.set(t,e,i);let r=this.parent;this.updateWorldMatrix(!0,!1),tT.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?tC.lookAt(tT,tP,this.up):tC.lookAt(tP,tT,this.up),this.quaternion.setFromRotationMatrix(tC),r&&(tC.extractRotation(r.matrixWorld),tA.setFromRotationMatrix(tC),this.quaternion.premultiply(tA.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",t):t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(tI),tV.child=t,this.dispatchEvent(tV),tV.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}let e=this.children.indexOf(t);return -1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(tB),tL.child=t,this.dispatchEvent(tL),tL.child=null),this}removeFromParent(){let t=this.parent;return null!==t&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),tC.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),tC.multiply(t.parent.matrixWorld)),t.applyMatrix4(tC),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(tI),tV.child=t,this.dispatchEvent(tV),tV.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,r=this.children.length;i<r;i++){let r=this.children[i].getObjectByProperty(t,e);if(void 0!==r)return r}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);let r=this.children;for(let n=0,s=r.length;n<s;n++)r[n].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(tT,t,tE),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(tT,tk,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);let e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);let e=this.children;for(let i=0,r=e.length;i<r;i++)e[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);let e=this.children;for(let i=0,r=e.length;i<r;i++)e[i].traverseVisible(t)}traverseAncestors(t){let e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);let e=this.children;for(let i=0,r=e.length;i<r;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){let i=this.parent;if(!0===t&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===e){let t=this.children;for(let e=0,i=t.length;e<i;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){let e=void 0===t||"string"==typeof t,i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});let r={};function n(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.visibility=this._visibility,r.active=this._active,r.bounds=this._bounds.map(t=>({boxInitialized:t.boxInitialized,boxMin:t.box.min.toArray(),boxMax:t.box.max.toArray(),sphereInitialized:t.sphereInitialized,sphereRadius:t.sphere.radius,sphereCenter:t.sphere.center.toArray()})),r.maxInstanceCount=this._maxInstanceCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.geometryCount=this._geometryCount,r.matricesTexture=this._matricesTexture.toJSON(t),null!==this._colorsTexture&&(r.colorsTexture=this._colorsTexture.toJSON(t)),null!==this.boundingSphere&&(r.boundingSphere={center:r.boundingSphere.center.toArray(),radius:r.boundingSphere.radius}),null!==this.boundingBox&&(r.boundingBox={min:r.boundingBox.min.toArray(),max:r.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(r.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=n(t.geometries,this.geometry);let e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){let i=e.shapes;if(Array.isArray(i))for(let e=0,r=i.length;e<r;e++){let r=i[e];n(t.shapes,r)}else n(t.shapes,i)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(n(t.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let e=[];for(let i=0,r=this.material.length;i<r;i++)e.push(n(t.materials,this.material[i]));r.material=e}else r.material=n(t.materials,this.material)}if(this.children.length>0){r.children=[];for(let e=0;e<this.children.length;e++)r.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){r.animations=[];for(let e=0;e<this.animations.length;e++){let i=this.animations[e];r.animations.push(n(t.animations,i))}}if(e){let e=s(t.geometries),r=s(t.materials),n=s(t.textures),a=s(t.images),o=s(t.shapes),h=s(t.skeletons),l=s(t.animations),u=s(t.nodes);e.length>0&&(i.geometries=e),r.length>0&&(i.materials=r),n.length>0&&(i.textures=n),a.length>0&&(i.images=a),o.length>0&&(i.shapes=o),h.length>0&&(i.skeletons=h),l.length>0&&(i.animations=l),u.length>0&&(i.nodes=u)}return i.object=r,i;function s(t){let e=[];for(let i in t){let r=t[i];delete r.metadata,e.push(r)}return e}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){let i=t.children[e];this.add(i.clone())}return this}}tU.DEFAULT_UP=new V(0,1,0),tU.DEFAULT_MATRIX_AUTO_UPDATE=!0,tU.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;let tD=new V,tF=new V,tq=new V,tW=new V,tJ=new V,tH=new V,tj=new V,tG=new V,tZ=new V,tY=new V;class tX{constructor(t=new V,e=new V,i=new V){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,r){r.subVectors(i,e),tD.subVectors(t,e),r.cross(tD);let n=r.lengthSq();return n>0?r.multiplyScalar(1/Math.sqrt(n)):r.set(0,0,0)}static getBarycoord(t,e,i,r,n){tD.subVectors(r,e),tF.subVectors(i,e),tq.subVectors(t,e);let s=tD.dot(tD),a=tD.dot(tF),o=tD.dot(tq),h=tF.dot(tF),l=tF.dot(tq),u=s*h-a*a;if(0===u)return n.set(0,0,0),null;let c=1/u,d=(h*o-a*l)*c,p=(s*l-a*o)*c;return n.set(1-d-p,p,d)}static containsPoint(t,e,i,r){return null!==this.getBarycoord(t,e,i,r,tW)&&tW.x>=0&&tW.y>=0&&tW.x+tW.y<=1}static getInterpolation(t,e,i,r,n,s,a,o){return null===this.getBarycoord(t,e,i,r,tW)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(n,tW.x),o.addScaledVector(s,tW.y),o.addScaledVector(a,tW.z),o)}static isFrontFacing(t,e,i,r){return tD.subVectors(i,e),tF.subVectors(t,e),0>tD.cross(tF).dot(r)}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,r){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[r]),this}setFromAttributeAndIndices(t,e,i,r){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,r),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return tD.subVectors(this.c,this.b),tF.subVectors(this.a,this.b),.5*tD.cross(tF).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return tX.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return tX.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,i,r,n){return tX.getInterpolation(t,this.a,this.b,this.c,e,i,r,n)}containsPoint(t){return tX.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return tX.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){let i,r;let n=this.a,s=this.b,a=this.c;tJ.subVectors(s,n),tH.subVectors(a,n),tG.subVectors(t,n);let o=tJ.dot(tG),h=tH.dot(tG);if(o<=0&&h<=0)return e.copy(n);tZ.subVectors(t,s);let l=tJ.dot(tZ),u=tH.dot(tZ);if(l>=0&&u<=l)return e.copy(s);let c=o*u-l*h;if(c<=0&&o>=0&&l<=0)return i=o/(o-l),e.copy(n).addScaledVector(tJ,i);tY.subVectors(t,a);let d=tJ.dot(tY),p=tH.dot(tY);if(p>=0&&d<=p)return e.copy(a);let m=d*h-o*p;if(m<=0&&h>=0&&p<=0)return r=h/(h-p),e.copy(n).addScaledVector(tH,r);let f=l*p-d*u;if(f<=0&&u-l>=0&&d-p>=0)return tj.subVectors(a,s),r=(u-l)/(u-l+(d-p)),e.copy(s).addScaledVector(tj,r);let g=1/(f+m+c);return i=m*g,r=c*g,e.copy(n).addScaledVector(tJ,i).addScaledVector(tH,r)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let tQ={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},tK={h:0,s:0,l:0},t$={h:0,s:0,l:0};function t0(t,e,i){return(i<0&&(i+=1),i>1&&(i-=1),i<1/6)?t+(e-t)*6*i:i<.5?e:i<2/3?t+(e-t)*6*(2/3-i):t}class t1{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,i)}set(t,e,i){return void 0===e&&void 0===i?t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t):this.setRGB(t,e,i),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=s){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,A.toWorkingColorSpace(this,e),this}setRGB(t,e,i,r=A.workingColorSpace){return this.r=t,this.g=e,this.b=i,A.toWorkingColorSpace(this,r),this}setHSL(t,e,i,r=A.workingColorSpace){if(t=(t%1+1)%1,e=m(e,0,1),i=m(i,0,1),0===e)this.r=this.g=this.b=i;else{let r=i<=.5?i*(1+e):i+e-i*e,n=2*i-r;this.r=t0(n,r,t+1/3),this.g=t0(n,r,t),this.b=t0(n,r,t-1/3)}return A.toWorkingColorSpace(this,r),this}setStyle(t,e=s){let i;function r(e){void 0!==e&&1>parseFloat(e)&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let n;let s=i[1],a=i[2];switch(s){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return r(n[4]),this.setRGB(Math.min(255,parseInt(n[1],10))/255,Math.min(255,parseInt(n[2],10))/255,Math.min(255,parseInt(n[3],10))/255,e);if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return r(n[4]),this.setRGB(Math.min(100,parseInt(n[1],10))/100,Math.min(100,parseInt(n[2],10))/100,Math.min(100,parseInt(n[3],10))/100,e);break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return r(n[4]),this.setHSL(parseFloat(n[1])/360,parseFloat(n[2])/100,parseFloat(n[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){let r=i[1],n=r.length;if(3===n)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,e);if(6===n)return this.setHex(parseInt(r,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=s){let i=tQ[t.toLowerCase()];return void 0!==i?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=C(t.r),this.g=C(t.g),this.b=C(t.b),this}copyLinearToSRGB(t){return this.r=P(t.r),this.g=P(t.g),this.b=P(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=s){return A.fromWorkingColorSpace(t2.copy(this),t),65536*Math.round(m(255*t2.r,0,255))+256*Math.round(m(255*t2.g,0,255))+Math.round(m(255*t2.b,0,255))}getHexString(t=s){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=A.workingColorSpace){let i,r;A.fromWorkingColorSpace(t2.copy(this),e);let n=t2.r,s=t2.g,a=t2.b,o=Math.max(n,s,a),h=Math.min(n,s,a),l=(h+o)/2;if(h===o)i=0,r=0;else{let t=o-h;switch(r=l<=.5?t/(o+h):t/(2-o-h),o){case n:i=(s-a)/t+(s<a?6:0);break;case s:i=(a-n)/t+2;break;case a:i=(n-s)/t+4}i/=6}return t.h=i,t.s=r,t.l=l,t}getRGB(t,e=A.workingColorSpace){return A.fromWorkingColorSpace(t2.copy(this),e),t.r=t2.r,t.g=t2.g,t.b=t2.b,t}getStyle(t=s){A.fromWorkingColorSpace(t2.copy(this),t);let e=t2.r,i=t2.g,r=t2.b;return t!==s?`color(${t} ${e.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(255*e)},${Math.round(255*i)},${Math.round(255*r)})`}offsetHSL(t,e,i){return this.getHSL(tK),this.setHSL(tK.h+t,tK.s+e,tK.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(tK),t.getHSL(t$);let i=(1-e)*tK.h+e*t$.h,r=(1-e)*tK.s+e*t$.s,n=(1-e)*tK.l+e*t$.l;return this.setHSL(i,r,n),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){let e=this.r,i=this.g,r=this.b,n=t.elements;return this.r=n[0]*e+n[3]*i+n[6]*r,this.g=n[1]*e+n[4]*i+n[7]*r,this.b=n[2]*e+n[5]*i+n[8]*r,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let t2=new t1;t1.NAMES=tQ;let t3=0,t5=new V,t4=new y;class t6{constructor(t,e,i=!1){if(Array.isArray(t))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=i,this.usage=35044,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}get updateRange(){var t;return(t="THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.")in b||(b[t]=!0,console.warn(t)),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let r=0,n=this.itemSize;r<n;r++)this.array[t+r]=e.array[i+r];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,i=this.count;e<i;e++)t4.fromBufferAttribute(this,e),t4.applyMatrix3(t),this.setXY(e,t4.x,t4.y);else if(3===this.itemSize)for(let e=0,i=this.count;e<i;e++)t5.fromBufferAttribute(this,e),t5.applyMatrix3(t),this.setXYZ(e,t5.x,t5.y,t5.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)t5.fromBufferAttribute(this,e),t5.applyMatrix4(t),this.setXYZ(e,t5.x,t5.y,t5.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)t5.fromBufferAttribute(this,e),t5.applyNormalMatrix(t),this.setXYZ(e,t5.x,t5.y,t5.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)t5.fromBufferAttribute(this,e),t5.transformDirection(t),this.setXYZ(e,t5.x,t5.y,t5.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=f(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=g(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=f(e,this.array)),e}setX(t,e){return this.normalized&&(e=g(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=f(e,this.array)),e}setY(t,e){return this.normalized&&(e=g(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=f(e,this.array)),e}setZ(t,e){return this.normalized&&(e=g(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=f(e,this.array)),e}setW(t,e){return this.normalized&&(e=g(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=g(e,this.array),i=g(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,r){return t*=this.itemSize,this.normalized&&(e=g(e,this.array),i=g(i,this.array),r=g(r,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=r,this}setXYZW(t,e,i,r,n){return t*=this.itemSize,this.normalized&&(e=g(e,this.array),i=g(i,this.array),r=g(r,this.array),n=g(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=r,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),35044!==this.usage&&(t.usage=this.usage),t}}class t7 extends t6{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class t9 extends t6{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class t8 extends t6{constructor(t,e,i){super(new Float32Array(t),e,i)}}let et=0,ee=new td,ei=new tU,er=new V,en=new D,es=new D,ea=new V;class eo extends c{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:et++}),this.uuid=p(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(!function(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}(t)?t7:t9)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){let e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);let i=this.attributes.normal;if(void 0!==i){let e=new x().getNormalMatrix(t);i.applyNormalMatrix(e),i.needsUpdate=!0}let r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(t),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return ee.makeRotationFromQuaternion(t),this.applyMatrix4(ee),this}rotateX(t){return ee.makeRotationX(t),this.applyMatrix4(ee),this}rotateY(t){return ee.makeRotationY(t),this.applyMatrix4(ee),this}rotateZ(t){return ee.makeRotationZ(t),this.applyMatrix4(ee),this}translate(t,e,i){return ee.makeTranslation(t,e,i),this.applyMatrix4(ee),this}scale(t,e,i){return ee.makeScale(t,e,i),this.applyMatrix4(ee),this}lookAt(t){return ei.lookAt(t),ei.updateMatrix(),this.applyMatrix4(ei.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(er).negate(),this.translate(er.x,er.y,er.z),this}setFromPoints(t){let e=[];for(let i=0,r=t.length;i<r;i++){let r=t[i];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new t8(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new D);let t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new V(-1/0,-1/0,-1/0),new V(Infinity,Infinity,Infinity));return}if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){let i=e[t];en.setFromBufferAttribute(i),this.morphTargetsRelative?(ea.addVectors(this.boundingBox.min,en.min),this.boundingBox.expandByPoint(ea),ea.addVectors(this.boundingBox.max,en.max),this.boundingBox.expandByPoint(ea)):(this.boundingBox.expandByPoint(en.min),this.boundingBox.expandByPoint(en.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new tn);let t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new V,1/0);return}if(t){let i=this.boundingSphere.center;if(en.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){let i=e[t];es.setFromBufferAttribute(i),this.morphTargetsRelative?(ea.addVectors(en.min,es.min),en.expandByPoint(ea),ea.addVectors(en.max,es.max),en.expandByPoint(ea)):(en.expandByPoint(es.min),en.expandByPoint(es.max))}en.getCenter(i);let r=0;for(let e=0,n=t.count;e<n;e++)ea.fromBufferAttribute(t,e),r=Math.max(r,i.distanceToSquared(ea));if(e)for(let n=0,s=e.length;n<s;n++){let s=e[n],a=this.morphTargetsRelative;for(let e=0,n=s.count;e<n;e++)ea.fromBufferAttribute(s,e),a&&(er.fromBufferAttribute(t,e),ea.add(er)),r=Math.max(r,i.distanceToSquared(ea))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let i=e.position,r=e.normal,n=e.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new t6(new Float32Array(4*i.count),4));let s=this.getAttribute("tangent"),a=[],o=[];for(let t=0;t<i.count;t++)a[t]=new V,o[t]=new V;let h=new V,l=new V,u=new V,c=new y,d=new y,p=new y,m=new V,f=new V,g=this.groups;0===g.length&&(g=[{start:0,count:t.count}]);for(let e=0,r=g.length;e<r;++e){let r=g[e],s=r.start,y=r.count;for(let e=s,r=s+y;e<r;e+=3)!function(t,e,r){h.fromBufferAttribute(i,t),l.fromBufferAttribute(i,e),u.fromBufferAttribute(i,r),c.fromBufferAttribute(n,t),d.fromBufferAttribute(n,e),p.fromBufferAttribute(n,r),l.sub(h),u.sub(h),d.sub(c),p.sub(c);let s=1/(d.x*p.y-p.x*d.y);isFinite(s)&&(m.copy(l).multiplyScalar(p.y).addScaledVector(u,-d.y).multiplyScalar(s),f.copy(u).multiplyScalar(d.x).addScaledVector(l,-p.x).multiplyScalar(s),a[t].add(m),a[e].add(m),a[r].add(m),o[t].add(f),o[e].add(f),o[r].add(f))}(t.getX(e+0),t.getX(e+1),t.getX(e+2))}let x=new V,_=new V,v=new V,b=new V;function w(t){v.fromBufferAttribute(r,t),b.copy(v);let e=a[t];x.copy(e),x.sub(v.multiplyScalar(v.dot(e))).normalize(),_.crossVectors(b,e);let i=_.dot(o[t]);s.setXYZW(t,x.x,x.y,x.z,i<0?-1:1)}for(let e=0,i=g.length;e<i;++e){let i=g[e],r=i.start,n=i.count;for(let e=r,i=r+n;e<i;e+=3)w(t.getX(e+0)),w(t.getX(e+1)),w(t.getX(e+2))}}computeVertexNormals(){let t=this.index,e=this.getAttribute("position");if(void 0!==e){let i=this.getAttribute("normal");if(void 0===i)i=new t6(new Float32Array(3*e.count),3),this.setAttribute("normal",i);else for(let t=0,e=i.count;t<e;t++)i.setXYZ(t,0,0,0);let r=new V,n=new V,s=new V,a=new V,o=new V,h=new V,l=new V,u=new V;if(t)for(let c=0,d=t.count;c<d;c+=3){let d=t.getX(c+0),p=t.getX(c+1),m=t.getX(c+2);r.fromBufferAttribute(e,d),n.fromBufferAttribute(e,p),s.fromBufferAttribute(e,m),l.subVectors(s,n),u.subVectors(r,n),l.cross(u),a.fromBufferAttribute(i,d),o.fromBufferAttribute(i,p),h.fromBufferAttribute(i,m),a.add(l),o.add(l),h.add(l),i.setXYZ(d,a.x,a.y,a.z),i.setXYZ(p,o.x,o.y,o.z),i.setXYZ(m,h.x,h.y,h.z)}else for(let t=0,a=e.count;t<a;t+=3)r.fromBufferAttribute(e,t+0),n.fromBufferAttribute(e,t+1),s.fromBufferAttribute(e,t+2),l.subVectors(s,n),u.subVectors(r,n),l.cross(u),i.setXYZ(t+0,l.x,l.y,l.z),i.setXYZ(t+1,l.x,l.y,l.z),i.setXYZ(t+2,l.x,l.y,l.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){let t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)ea.fromBufferAttribute(t,e),ea.normalize(),t.setXYZ(e,ea.x,ea.y,ea.z)}toNonIndexed(){function t(t,e){let i=t.array,r=t.itemSize,n=t.normalized,s=new i.constructor(e.length*r),a=0,o=0;for(let n=0,h=e.length;n<h;n++){a=t.isInterleavedBufferAttribute?e[n]*t.data.stride+t.offset:e[n]*r;for(let t=0;t<r;t++)s[o++]=i[a++]}return new t6(s,r,n)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let e=new eo,i=this.index.array,r=this.attributes;for(let n in r){let s=t(r[n],i);e.setAttribute(n,s)}let n=this.morphAttributes;for(let r in n){let s=[],a=n[r];for(let e=0,r=a.length;e<r;e++){let r=t(a[e],i);s.push(r)}e.morphAttributes[r]=s}e.morphTargetsRelative=this.morphTargetsRelative;let s=this.groups;for(let t=0,i=s.length;t<i;t++){let i=s[t];e.addGroup(i.start,i.count,i.materialIndex)}return e}toJSON(){let t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){let e=this.parameters;for(let i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};let e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});let i=this.attributes;for(let e in i){let r=i[e];t.data.attributes[e]=r.toJSON(t.data)}let r={},n=!1;for(let e in this.morphAttributes){let i=this.morphAttributes[e],s=[];for(let e=0,r=i.length;e<r;e++){let r=i[e];s.push(r.toJSON(t.data))}s.length>0&&(r[e]=s,n=!0)}n&&(t.data.morphAttributes=r,t.data.morphTargetsRelative=this.morphTargetsRelative);let s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));let a=this.boundingSphere;return null!==a&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let e={};this.name=t.name;let i=t.index;null!==i&&this.setIndex(i.clone(e));let r=t.attributes;for(let t in r){let i=r[t];this.setAttribute(t,i.clone(e))}let n=t.morphAttributes;for(let t in n){let i=[],r=n[t];for(let t=0,n=r.length;t<n;t++)i.push(r[t].clone(e));this.morphAttributes[t]=i}this.morphTargetsRelative=t.morphTargetsRelative;let s=t.groups;for(let t=0,e=s.length;t<e;t++){let e=s[t];this.addGroup(e.start,e.count,e.materialIndex)}let a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());let o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}class eh extends eo{constructor(t=1,e=1,i=1,r=1,n=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:r,heightSegments:n,depthSegments:s};let a=this;r=Math.floor(r),n=Math.floor(n);let o=[],h=[],l=[],u=[],c=0,d=0;function p(t,e,i,r,n,s,p,m,f,g,y){let x=s/f,_=p/g,v=s/2,b=p/2,w=m/2,M=f+1,S=g+1,z=0,A=0,C=new V;for(let s=0;s<S;s++){let a=s*_-b;for(let o=0;o<M;o++){let c=o*x-v;C[t]=c*r,C[e]=a*n,C[i]=w,h.push(C.x,C.y,C.z),C[t]=0,C[e]=0,C[i]=m>0?1:-1,l.push(C.x,C.y,C.z),u.push(o/f),u.push(1-s/g),z+=1}}for(let t=0;t<g;t++)for(let e=0;e<f;e++){let i=c+e+M*t,r=c+e+M*(t+1),n=c+(e+1)+M*(t+1),s=c+(e+1)+M*t;o.push(i,r,s),o.push(r,n,s),A+=6}a.addGroup(d,A,y),d+=A,c+=z}p("z","y","x",-1,-1,i,e,t,s=Math.floor(s),n,0),p("z","y","x",1,-1,i,e,-t,s,n,1),p("x","z","y",1,1,t,i,e,r,s,2),p("x","z","y",1,-1,t,i,-e,r,s,3),p("x","y","z",1,-1,t,e,i,r,n,4),p("x","y","z",-1,-1,t,e,-i,r,n,5),this.setIndex(o),this.setAttribute("position",new t8(h,3)),this.setAttribute("normal",new t8(l,3)),this.setAttribute("uv",new t8(u,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new eh(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function el(t){let e={};for(let i=0;i<t.length;i++){let r=function(t){let e={};for(let i in t)for(let r in e[i]={},t[i]){let n=t[i][r];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[i][r]=null):e[i][r]=n.clone():Array.isArray(n)?e[i][r]=n.slice():e[i][r]=n}return e}(t[i]);for(let t in r)e[t]=r[t]}return e}class eu extends eo{constructor(t=1,e=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:r};let n=t/2,s=e/2,a=Math.floor(i),o=Math.floor(r),h=a+1,l=o+1,u=t/a,c=e/o,d=[],p=[],m=[],f=[];for(let t=0;t<l;t++){let e=t*c-s;for(let i=0;i<h;i++){let r=i*u-n;p.push(r,-e,0),m.push(0,0,1),f.push(i/a),f.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<a;e++){let i=e+h*t,r=e+h*(t+1),n=e+1+h*(t+1),s=e+1+h*t;d.push(i,r,s),d.push(r,n,s)}this.setIndex(d),this.setAttribute("position",new t8(p,3)),this.setAttribute("normal",new t8(m,3)),this.setAttribute("uv",new t8(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new eu(t.width,t.height,t.widthSegments,t.heightSegments)}}let ec="#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",ed="#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef USE_SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULAR_COLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n	#ifdef USE_SPECULAR_INTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n	uniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEEN_COLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	uniform vec2 anisotropyVector;\n	#ifdef USE_ANISOTROPYMAP\n		uniform sampler2D anisotropyMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n	#endif\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",ep={common:{diffuse:{value:new t1(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new x},alphaMap:{value:null},alphaMapTransform:{value:new x},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new x}},envmap:{envMap:{value:null},envMapRotation:{value:new x},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new x}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new x}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new x},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new x},normalScale:{value:new y(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new x},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new x}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new x}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new x}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new t1(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new t1(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new x},alphaTest:{value:0},uvTransform:{value:new x}},sprite:{diffuse:{value:new t1(16777215)},opacity:{value:1},center:{value:new y(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new x},alphaMap:{value:null},alphaMapTransform:{value:new x},alphaTest:{value:0}}},em={basic:{uniforms:el([ep.common,ep.specularmap,ep.envmap,ep.aomap,ep.lightmap,ep.fog]),vertexShader:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",fragmentShader:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}"},lambert:{uniforms:el([ep.common,ep.specularmap,ep.envmap,ep.aomap,ep.lightmap,ep.emissivemap,ep.bumpmap,ep.normalmap,ep.displacementmap,ep.fog,ep.lights,{emissive:{value:new t1(0)}}]),vertexShader:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",fragmentShader:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_lambert_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}"},phong:{uniforms:el([ep.common,ep.specularmap,ep.envmap,ep.aomap,ep.lightmap,ep.emissivemap,ep.bumpmap,ep.normalmap,ep.displacementmap,ep.fog,ep.lights,{emissive:{value:new t1(0)},specular:{value:new t1(1118481)},shininess:{value:30}}]),vertexShader:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",fragmentShader:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}"},standard:{uniforms:el([ep.common,ep.envmap,ep.aomap,ep.lightmap,ep.emissivemap,ep.bumpmap,ep.normalmap,ep.displacementmap,ep.roughnessmap,ep.metalnessmap,ep.fog,ep.lights,{emissive:{value:new t1(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ec,fragmentShader:ed},toon:{uniforms:el([ep.common,ep.aomap,ep.lightmap,ep.emissivemap,ep.bumpmap,ep.normalmap,ep.displacementmap,ep.gradientmap,ep.fog,ep.lights,{emissive:{value:new t1(0)}}]),vertexShader:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",fragmentShader:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}"},matcap:{uniforms:el([ep.common,ep.bumpmap,ep.normalmap,ep.displacementmap,ep.fog,{matcap:{value:null}}]),vertexShader:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",fragmentShader:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}"},points:{uniforms:el([ep.points,ep.fog]),vertexShader:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n	varying vec2 vUv;\n	uniform mat3 uvTransform;\n#endif\nvoid main() {\n	#ifdef USE_POINTS_UV\n		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	#endif\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",fragmentShader:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}"},dashed:{uniforms:el([ep.common,ep.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",fragmentShader:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}"},depth:{uniforms:el([ep.common,ep.displacementmap]),vertexShader:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <skinbase_vertex>\n	#include <morphinstance_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",fragmentShader:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <clipping_planes_fragment>\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#elif DEPTH_PACKING == 3202\n		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n	#elif DEPTH_PACKING == 3203\n		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n	#endif\n}"},normal:{uniforms:el([ep.common,ep.bumpmap,ep.normalmap,ep.displacementmap,{opacity:{value:1}}]),vertexShader:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",fragmentShader:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}"},sprite:{uniforms:el([ep.sprite,ep.fog]),vertexShader:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",fragmentShader:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}"},background:{uniforms:{uvTransform:{value:new x},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",fragmentShader:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}"},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new x}},vertexShader:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",fragmentShader:"#ifdef ENVMAP_TYPE_CUBE\n	uniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n	uniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n	#else\n		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}"},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n	gl_FragColor = texColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}"},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",fragmentShader:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}"},distanceRGBA:{uniforms:el([ep.common,ep.displacementmap,{referencePosition:{value:new V},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <skinbase_vertex>\n	#include <morphinstance_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",fragmentShader:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <clipping_planes_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}"},shadow:{uniforms:el([ep.lights,ep.fog,{color:{value:new t1(0)},opacity:{value:1}}]),vertexShader:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",fragmentShader:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	#include <logdepthbuf_fragment>\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}"}};em.physical={uniforms:el([em.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new x},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new x},clearcoatNormalScale:{value:new y(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new x},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new x},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new x},sheen:{value:0},sheenColor:{value:new t1(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new x},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new x},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new x},transmissionSamplerSize:{value:new y},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new x},attenuationDistance:{value:0},attenuationColor:{value:new t1(0)},specularColor:{value:new t1(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new x},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new x},anisotropyVector:{value:new y},anisotropyMap:{value:null},anisotropyMapTransform:{value:new x}}]),vertexShader:ec,fragmentShader:ed},new Float32Array(16),new Float32Array(9),new Float32Array(4);class ef{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){let i=this.getUtoTmapping(t);return this.getPoint(i,e)}getPoints(t=5){let e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return e}getSpacedPoints(t=5){let e=[];for(let i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e}getLength(){let t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let e=[],i,r=this.getPoint(0),n=0;e.push(0);for(let s=1;s<=t;s++)e.push(n+=(i=this.getPoint(s/t)).distanceTo(r)),r=i;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){let i;let r=this.getLengths(),n=0,s=r.length;i=e||t*r[s-1];let a=0,o=s-1,h;for(;a<=o;)if((h=r[n=Math.floor(a+(o-a)/2)]-i)<0)a=n+1;else if(h>0)o=n-1;else{o=n;break}if(r[n=o]===i)return n/(s-1);let l=r[n],u=r[n+1];return(n+(i-l)/(u-l))/(s-1)}getTangent(t,e){let i=t-1e-4,r=t+1e-4;i<0&&(i=0),r>1&&(r=1);let n=this.getPoint(i),s=this.getPoint(r),a=e||(n.isVector2?new y:new V);return a.copy(s).sub(n).normalize(),a}getTangentAt(t,e){let i=this.getUtoTmapping(t);return this.getTangent(i,e)}computeFrenetFrames(t,e){let i=new V,r=[],n=[],s=[],a=new V,o=new td;for(let e=0;e<=t;e++){let i=e/t;r[e]=this.getTangentAt(i,new V)}n[0]=new V,s[0]=new V;let h=Number.MAX_VALUE,l=Math.abs(r[0].x),u=Math.abs(r[0].y),c=Math.abs(r[0].z);l<=h&&(h=l,i.set(1,0,0)),u<=h&&(h=u,i.set(0,1,0)),c<=h&&i.set(0,0,1),a.crossVectors(r[0],i).normalize(),n[0].crossVectors(r[0],a),s[0].crossVectors(r[0],n[0]);for(let e=1;e<=t;e++){if(n[e]=n[e-1].clone(),s[e]=s[e-1].clone(),a.crossVectors(r[e-1],r[e]),a.length()>Number.EPSILON){a.normalize();let t=Math.acos(m(r[e-1].dot(r[e]),-1,1));n[e].applyMatrix4(o.makeRotationAxis(a,t))}s[e].crossVectors(r[e],n[e])}if(!0===e){let e=Math.acos(m(n[0].dot(n[t]),-1,1));e/=t,r[0].dot(a.crossVectors(n[0],n[t]))>0&&(e=-e);for(let i=1;i<=t;i++)n[i].applyMatrix4(o.makeRotationAxis(r[i],e*i)),s[i].crossVectors(r[i],n[i])}return{tangents:r,normals:n,binormals:s}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){let t={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class eg extends ef{constructor(t=0,e=0,i=1,r=1,n=0,s=2*Math.PI,a=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=i,this.yRadius=r,this.aStartAngle=n,this.aEndAngle=s,this.aClockwise=a,this.aRotation=o}getPoint(t,e=new y){let i=2*Math.PI,r=this.aEndAngle-this.aStartAngle,n=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=n?0:i),!0!==this.aClockwise||n||(r===i?r=-i:r-=i);let s=this.aStartAngle+t*r,a=this.aX+this.xRadius*Math.cos(s),o=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){let t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),i=a-this.aX,r=o-this.aY;a=i*t-r*e+this.aX,o=i*e+r*t+this.aY}return e.set(a,o)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){let t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class ey extends eg{constructor(t,e,i,r,n,s){super(t,e,i,i,r,n,s),this.isArcCurve=!0,this.type="ArcCurve"}}function ex(){let t=0,e=0,i=0,r=0;function n(n,s,a,o){t=n,e=a,i=-3*n+3*s-2*a-o,r=2*n-2*s+a+o}return{initCatmullRom:function(t,e,i,r,s){n(e,i,s*(i-t),s*(r-e))},initNonuniformCatmullRom:function(t,e,i,r,s,a,o){let h=(e-t)/s-(i-t)/(s+a)+(i-e)/a,l=(i-e)/a-(r-e)/(a+o)+(r-i)/o;n(e,i,h*=a,l*=a)},calc:function(n){let s=n*n;return t+e*n+i*s+s*n*r}}}let e_=new V,ev=new ex,eb=new ex,ew=new ex;class eM extends ef{constructor(t=[],e=!1,i="centripetal",r=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=i,this.tension=r}getPoint(t,e=new V){let i,r;let n=this.points,s=n.length,a=(s-(this.closed?0:1))*t,o=Math.floor(a),h=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/s)+1)*s:0===h&&o===s-1&&(o=s-2,h=1),this.closed||o>0?i=n[(o-1)%s]:(e_.subVectors(n[0],n[1]).add(n[0]),i=e_);let l=n[o%s],u=n[(o+1)%s];if(this.closed||o+2<s?r=n[(o+2)%s]:(e_.subVectors(n[s-1],n[s-2]).add(n[s-1]),r=e_),"centripetal"===this.curveType||"chordal"===this.curveType){let t="chordal"===this.curveType?.5:.25,e=Math.pow(i.distanceToSquared(l),t),n=Math.pow(l.distanceToSquared(u),t),s=Math.pow(u.distanceToSquared(r),t);n<1e-4&&(n=1),e<1e-4&&(e=n),s<1e-4&&(s=n),ev.initNonuniformCatmullRom(i.x,l.x,u.x,r.x,e,n,s),eb.initNonuniformCatmullRom(i.y,l.y,u.y,r.y,e,n,s),ew.initNonuniformCatmullRom(i.z,l.z,u.z,r.z,e,n,s)}else"catmullrom"===this.curveType&&(ev.initCatmullRom(i.x,l.x,u.x,r.x,this.tension),eb.initCatmullRom(i.y,l.y,u.y,r.y,this.tension),ew.initCatmullRom(i.z,l.z,u.z,r.z,this.tension));return e.set(ev.calc(h),eb.calc(h),ew.calc(h)),e}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){let i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){let t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){let i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){let i=t.points[e];this.points.push(new V().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function eS(t,e,i,r,n){let s=(r-e)*.5,a=(n-i)*.5,o=t*t;return t*o*(2*i-2*r+s+a)+(-3*i+3*r-2*s-a)*o+s*t+i}function ez(t,e,i,r){return function(t,e){let i=1-t;return i*i*e}(t,e)+2*(1-t)*t*i+t*t*r}function eA(t,e,i,r,n){return function(t,e){let i=1-t;return i*i*i*e}(t,e)+function(t,e){let i=1-t;return 3*i*i*t*e}(t,i)+3*(1-t)*t*t*r+t*t*t*n}class eC extends ef{constructor(t=new y,e=new y,i=new y,r=new y){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=i,this.v3=r}getPoint(t,e=new y){let i=this.v0,r=this.v1,n=this.v2,s=this.v3;return e.set(eA(t,i.x,r.x,n.x,s.x),eA(t,i.y,r.y,n.y,s.y)),e}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){let t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class eP extends ef{constructor(t=new V,e=new V,i=new V,r=new V){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=i,this.v3=r}getPoint(t,e=new V){let i=this.v0,r=this.v1,n=this.v2,s=this.v3;return e.set(eA(t,i.x,r.x,n.x,s.x),eA(t,i.y,r.y,n.y,s.y),eA(t,i.z,r.z,n.z,s.z)),e}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){let t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class eT extends ef{constructor(t=new y,e=new y){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new y){return 1===t?e.copy(this.v2):(e.copy(this.v2).sub(this.v1),e.multiplyScalar(t).add(this.v1)),e}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new y){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){let t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class eE extends ef{constructor(t=new V,e=new V){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new V){return 1===t?e.copy(this.v2):(e.copy(this.v2).sub(this.v1),e.multiplyScalar(t).add(this.v1)),e}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new V){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){let t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class ek extends ef{constructor(t=new y,e=new y,i=new y){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new y){let i=this.v0,r=this.v1,n=this.v2;return e.set(ez(t,i.x,r.x,n.x),ez(t,i.y,r.y,n.y)),e}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){let t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class eN extends ef{constructor(t=new V,e=new V,i=new V){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new V){let i=this.v0,r=this.v1,n=this.v2;return e.set(ez(t,i.x,r.x,n.x),ez(t,i.y,r.y,n.y),ez(t,i.z,r.z,n.z)),e}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){let t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class eR extends ef{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new y){let i=this.points,r=(i.length-1)*t,n=Math.floor(r),s=r-n,a=i[0===n?n:n-1],o=i[n],h=i[n>i.length-2?i.length-1:n+1],l=i[n>i.length-3?i.length-1:n+2];return e.set(eS(s,a.x,o.x,h.x,l.x),eS(s,a.y,o.y,h.y,l.y)),e}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){let i=t.points[e];this.points.push(i.clone())}return this}toJSON(){let t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){let i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){let i=t.points[e];this.points.push(new y().fromArray(i))}return this}}var eO=Object.freeze({__proto__:null,ArcCurve:ey,CatmullRomCurve3:eM,CubicBezierCurve:eC,CubicBezierCurve3:eP,EllipseCurve:eg,LineCurve:eT,LineCurve3:eE,QuadraticBezierCurve:ek,QuadraticBezierCurve3:eN,SplineCurve:eR});class eI extends ef{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){let t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){let i=!0===t.isVector2?"LineCurve":"LineCurve3";this.curves.push(new eO[i](e,t))}return this}getPoint(t,e){let i=t*this.getLength(),r=this.getCurveLengths(),n=0;for(;n<r.length;){if(r[n]>=i){let t=r[n]-i,s=this.curves[n],a=s.getLength(),o=0===a?0:1-t/a;return s.getPointAt(o,e)}n++}return null}getLength(){let t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let t=[],e=0;for(let i=0,r=this.curves.length;i<r;i++)t.push(e+=this.curves[i].getLength());return this.cacheLengths=t,t}getSpacedPoints(t=40){let e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){let e;let i=[];for(let r=0,n=this.curves;r<n.length;r++){let s=n[r],a=s.isEllipseCurve?2*t:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?t*s.points.length:t,o=s.getPoints(a);for(let t=0;t<o.length;t++){let r=o[t];e&&e.equals(r)||(i.push(r),e=r)}}return this.autoClose&&i.length>1&&!i[i.length-1].equals(i[0])&&i.push(i[0]),i}copy(t){super.copy(t),this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){let i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){let t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,i=this.curves.length;e<i;e++){let i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){let i=t.curves[e];this.curves.push(new eO[i.type]().fromJSON(i))}return this}}class eB extends eI{constructor(t){super(),this.type="Path",this.currentPoint=new y,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){let i=new eT(this.currentPoint.clone(),new y(t,e));return this.curves.push(i),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,i,r){let n=new ek(this.currentPoint.clone(),new y(t,e),new y(i,r));return this.curves.push(n),this.currentPoint.set(i,r),this}bezierCurveTo(t,e,i,r,n,s){let a=new eC(this.currentPoint.clone(),new y(t,e),new y(i,r),new y(n,s));return this.curves.push(a),this.currentPoint.set(n,s),this}splineThru(t){let e=new eR([this.currentPoint.clone()].concat(t));return this.curves.push(e),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,i,r,n,s){let a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+a,e+o,i,r,n,s),this}absarc(t,e,i,r,n,s){return this.absellipse(t,e,i,i,r,n,s),this}ellipse(t,e,i,r,n,s,a,o){let h=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(t+h,e+l,i,r,n,s,a,o),this}absellipse(t,e,i,r,n,s,a,o){let h=new eg(t,e,i,r,n,s,a,o);if(this.curves.length>0){let t=h.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(h);let l=h.getPoint(1);return this.currentPoint.copy(l),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){let t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class eV extends eo{constructor(t=[new y(0,-.5),new y(.5,0),new y(0,.5)],e=12,i=0,r=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:i,phiLength:r},e=Math.floor(e),r=m(r,0,2*Math.PI);let n=[],s=[],a=[],o=[],h=[],l=1/e,u=new V,c=new y,d=new V,p=new V,f=new V,g=0,x=0;for(let e=0;e<=t.length-1;e++)switch(e){case 0:g=t[e+1].x-t[e].x,x=t[e+1].y-t[e].y,d.x=1*x,d.y=-g,d.z=0*x,f.copy(d),d.normalize(),o.push(d.x,d.y,d.z);break;case t.length-1:o.push(f.x,f.y,f.z);break;default:g=t[e+1].x-t[e].x,x=t[e+1].y-t[e].y,d.x=1*x,d.y=-g,d.z=0*x,p.copy(d),d.x+=f.x,d.y+=f.y,d.z+=f.z,d.normalize(),o.push(d.x,d.y,d.z),f.copy(p)}for(let n=0;n<=e;n++){let d=i+n*l*r,p=Math.sin(d),m=Math.cos(d);for(let i=0;i<=t.length-1;i++){u.x=t[i].x*p,u.y=t[i].y,u.z=t[i].x*m,s.push(u.x,u.y,u.z),c.x=n/e,c.y=i/(t.length-1),a.push(c.x,c.y);let r=o[3*i+0]*p,l=o[3*i+1],d=o[3*i+0]*m;h.push(r,l,d)}}for(let i=0;i<e;i++)for(let e=0;e<t.length-1;e++){let r=e+i*t.length,s=r+t.length,a=r+t.length+1,o=r+1;n.push(r,s,o),n.push(a,o,s)}this.setIndex(n),this.setAttribute("position",new t8(s,3)),this.setAttribute("uv",new t8(a,2)),this.setAttribute("normal",new t8(h,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new eV(t.points,t.segments,t.phiStart,t.phiLength)}}class eL extends eV{constructor(t=1,e=1,i=4,r=8){let n=new eB;n.absarc(0,-e/2,t,1.5*Math.PI,0),n.absarc(0,e/2,t,0,.5*Math.PI),super(n.getPoints(i),r),this.type="CapsuleGeometry",this.parameters={radius:t,length:e,capSegments:i,radialSegments:r}}static fromJSON(t){return new eL(t.radius,t.length,t.capSegments,t.radialSegments)}}class eU extends eo{constructor(t=1,e=32,i=0,r=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:i,thetaLength:r},e=Math.max(3,e);let n=[],s=[],a=[],o=[],h=new V,l=new y;s.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let n=0,u=3;n<=e;n++,u+=3){let c=i+n/e*r;h.x=t*Math.cos(c),h.y=t*Math.sin(c),s.push(h.x,h.y,h.z),a.push(0,0,1),l.x=(s[u]/t+1)/2,l.y=(s[u+1]/t+1)/2,o.push(l.x,l.y)}for(let t=1;t<=e;t++)n.push(t,t+1,0);this.setIndex(n),this.setAttribute("position",new t8(s,3)),this.setAttribute("normal",new t8(a,3)),this.setAttribute("uv",new t8(o,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new eU(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class eD extends eo{constructor(t=1,e=1,i=1,r=32,n=1,s=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:r,heightSegments:n,openEnded:s,thetaStart:a,thetaLength:o};let h=this;r=Math.floor(r),n=Math.floor(n);let l=[],u=[],c=[],d=[],p=0,m=[],f=i/2,g=0;function x(i){let n=p,s=new y,m=new V,x=0,_=!0===i?t:e,v=!0===i?1:-1;for(let t=1;t<=r;t++)u.push(0,f*v,0),c.push(0,v,0),d.push(.5,.5),p++;let b=p;for(let t=0;t<=r;t++){let e=t/r*o+a,i=Math.cos(e),n=Math.sin(e);m.x=_*n,m.y=f*v,m.z=_*i,u.push(m.x,m.y,m.z),c.push(0,v,0),s.x=.5*i+.5,s.y=.5*n*v+.5,d.push(s.x,s.y),p++}for(let t=0;t<r;t++){let e=n+t,r=b+t;!0===i?l.push(r,r+1,e):l.push(r+1,r,e),x+=3}h.addGroup(g,x,!0===i?1:2),g+=x}(function(){let s=new V,y=new V,x=0,_=(e-t)/i;for(let h=0;h<=n;h++){let l=[],g=h/n,x=g*(e-t)+t;for(let t=0;t<=r;t++){let e=t/r,n=e*o+a,h=Math.sin(n),m=Math.cos(n);y.x=x*h,y.y=-g*i+f,y.z=x*m,u.push(y.x,y.y,y.z),s.set(h,_,m).normalize(),c.push(s.x,s.y,s.z),d.push(e,1-g),l.push(p++)}m.push(l)}for(let t=0;t<r;t++)for(let e=0;e<n;e++){let i=m[e][t],r=m[e+1][t],n=m[e+1][t+1],s=m[e][t+1];l.push(i,r,s),l.push(r,n,s),x+=6}h.addGroup(g,x,0),g+=x})(),!1===s&&(t>0&&x(!0),e>0&&x(!1)),this.setIndex(l),this.setAttribute("position",new t8(u,3)),this.setAttribute("normal",new t8(c,3)),this.setAttribute("uv",new t8(d,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new eD(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class eF extends eD{constructor(t=1,e=1,i=32,r=1,n=!1,s=0,a=2*Math.PI){super(0,t,e,i,r,n,s,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:r,openEnded:n,thetaStart:s,thetaLength:a}}static fromJSON(t){return new eF(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class eq extends eo{constructor(t=[],e=[],i=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:r};let n=[],s=[];function a(t){n.push(t.x,t.y,t.z)}function o(e,i){let r=3*e;i.x=t[r+0],i.y=t[r+1],i.z=t[r+2]}function h(t,e,i,r){r<0&&1===t.x&&(s[e]=t.x-1),0===i.x&&0===i.z&&(s[e]=r/2/Math.PI+.5)}function l(t){return Math.atan2(t.z,-t.x)}(function(t){let i=new V,r=new V,n=new V;for(let s=0;s<e.length;s+=3)o(e[s+0],i),o(e[s+1],r),o(e[s+2],n),function(t,e,i,r){let n=r+1,s=[];for(let r=0;r<=n;r++){s[r]=[];let a=t.clone().lerp(i,r/n),o=e.clone().lerp(i,r/n),h=n-r;for(let t=0;t<=h;t++)0===t&&r===n?s[r][t]=a:s[r][t]=a.clone().lerp(o,t/h)}for(let t=0;t<n;t++)for(let e=0;e<2*(n-t)-1;e++){let i=Math.floor(e/2);e%2==0?(a(s[t][i+1]),a(s[t+1][i]),a(s[t][i])):(a(s[t][i+1]),a(s[t+1][i+1]),a(s[t+1][i]))}}(i,r,n,t)})(r),function(t){let e=new V;for(let i=0;i<n.length;i+=3)e.x=n[i+0],e.y=n[i+1],e.z=n[i+2],e.normalize().multiplyScalar(t),n[i+0]=e.x,n[i+1]=e.y,n[i+2]=e.z}(i),function(){let t=new V;for(let e=0;e<n.length;e+=3){t.x=n[e+0],t.y=n[e+1],t.z=n[e+2];let i=l(t)/2/Math.PI+.5,r=Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5;s.push(i,1-r)}(function(){let t=new V,e=new V,i=new V,r=new V,a=new y,o=new y,u=new y;for(let c=0,d=0;c<n.length;c+=9,d+=6){t.set(n[c+0],n[c+1],n[c+2]),e.set(n[c+3],n[c+4],n[c+5]),i.set(n[c+6],n[c+7],n[c+8]),a.set(s[d+0],s[d+1]),o.set(s[d+2],s[d+3]),u.set(s[d+4],s[d+5]),r.copy(t).add(e).add(i).divideScalar(3);let p=l(r);h(a,d+0,t,p),h(o,d+2,e,p),h(u,d+4,i,p)}})(),function(){for(let t=0;t<s.length;t+=6){let e=s[t+0],i=s[t+2],r=s[t+4],n=Math.max(e,i,r),a=Math.min(e,i,r);n>.9&&a<.1&&(e<.2&&(s[t+0]+=1),i<.2&&(s[t+2]+=1),r<.2&&(s[t+4]+=1))}}()}(),this.setAttribute("position",new t8(n,3)),this.setAttribute("normal",new t8(n.slice(),3)),this.setAttribute("uv",new t8(s,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new eq(t.vertices,t.indices,t.radius,t.details)}}class eW extends eq{constructor(t=1,e=0){let i=(1+Math.sqrt(5))/2,r=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new eW(t.radius,t.detail)}}class eJ extends eB{constructor(t){super(t),this.uuid=p(),this.type="Shape",this.holes=[]}getPointsHoles(t){let e=[];for(let i=0,r=this.holes.length;i<r;i++)e[i]=this.holes[i].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){let i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){let t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,i=this.holes.length;e<i;e++){let i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){let i=t.holes[e];this.holes.push(new eB().fromJSON(i))}return this}}let eH=function(t,e,i=2){let r,n,s,a,o,h,l;let u=e&&e.length,c=u?e[0]*i:t.length,d=ej(t,0,c,i,!0),p=[];if(!d||d.next===d.prev)return p;if(u&&(d=function(t,e,i,r){let n,s,a,o,h;let l=[];for(n=0,s=e.length;n<s;n++)a=e[n]*r,o=n<s-1?e[n+1]*r:t.length,(h=ej(t,a,o,r,!1))===h.next&&(h.steiner=!0),l.push(function(t){let e=t,i=t;do(e.x<i.x||e.x===i.x&&e.y<i.y)&&(i=e),e=e.next;while(e!==t);return i}(h));for(l.sort(eZ),n=0;n<l.length;n++)i=function(t,e){let i=function(t,e){let i=e,r=-1/0,n,s=t.x,a=t.y;do{if(a<=i.y&&a>=i.next.y&&i.next.y!==i.y){let t=i.x+(a-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(t<=s&&t>r&&(r=t,n=i.x<i.next.x?i:i.next,t===s))return n}i=i.next}while(i!==e);if(!n)return null;let o=n,h=n.x,l=n.y,u=1/0,c;i=n;do{var d,p;s>=i.x&&i.x>=h&&s!==i.x&&eX(a<l?s:r,a,h,l,a<l?r:s,a,i.x,i.y)&&(c=Math.abs(a-i.y)/(s-i.x),e2(i,t)&&(c<u||c===u&&(i.x>n.x||i.x===n.x&&(d=n,p=i,0>eQ(d.prev,d,p.prev)&&0>eQ(p.next,d,d.next))))&&(n=i,u=c)),i=i.next}while(i!==o);return n}(t,e);if(!i)return e;let r=e3(i,t);return eG(r,r.next),eG(i,i.next)}(l[n],i);return i}(t,e,d,i)),t.length>80*i){r=s=t[0],n=a=t[1];for(let e=i;e<c;e+=i)o=t[e],h=t[e+1],o<r&&(r=o),h<n&&(n=h),o>s&&(s=o),h>a&&(a=h);l=0!==(l=Math.max(s-r,a-n))?32767/l:0}return function t(e,i,r,n,s,a,o){if(!e)return;!o&&a&&function(t,e,i,r){let n=t;do 0===n.z&&(n.z=eY(n.x,n.y,e,i,r)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==t);n.prevZ.nextZ=null,n.prevZ=null,function(t){let e,i,r,n,s,a,o,h,l=1;do{for(i=t,t=null,s=null,a=0;i;){for(a++,r=i,o=0,e=0;e<l&&(o++,r=r.nextZ);e++);for(h=l;o>0||h>0&&r;)0!==o&&(0===h||!r||i.z<=r.z)?(n=i,i=i.nextZ,o--):(n=r,r=r.nextZ,h--),s?s.nextZ=n:t=n,n.prevZ=s,s=n;i=r}s.nextZ=null,l*=2}while(a>1)}(n)}(e,n,s,a);let h=e,l,u;for(;e.prev!==e.next;){if(l=e.prev,u=e.next,a?function(t,e,i,r){let n=t.prev,s=t.next;if(eQ(n,t,s)>=0)return!1;let a=n.x,o=t.x,h=s.x,l=n.y,u=t.y,c=s.y,d=a<o?a<h?a:h:o<h?o:h,p=l<u?l<c?l:c:u<c?u:c,m=a>o?a>h?a:h:o>h?o:h,f=l>u?l>c?l:c:u>c?u:c,g=eY(d,p,e,i,r),y=eY(m,f,e,i,r),x=t.prevZ,_=t.nextZ;for(;x&&x.z>=g&&_&&_.z<=y;){if(x.x>=d&&x.x<=m&&x.y>=p&&x.y<=f&&x!==n&&x!==s&&eX(a,l,o,u,h,c,x.x,x.y)&&eQ(x.prev,x,x.next)>=0||(x=x.prevZ,_.x>=d&&_.x<=m&&_.y>=p&&_.y<=f&&_!==n&&_!==s&&eX(a,l,o,u,h,c,_.x,_.y)&&eQ(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;x&&x.z>=g;){if(x.x>=d&&x.x<=m&&x.y>=p&&x.y<=f&&x!==n&&x!==s&&eX(a,l,o,u,h,c,x.x,x.y)&&eQ(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;_&&_.z<=y;){if(_.x>=d&&_.x<=m&&_.y>=p&&_.y<=f&&_!==n&&_!==s&&eX(a,l,o,u,h,c,_.x,_.y)&&eQ(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}(e,n,s,a):function(t){let e=t.prev,i=t.next;if(eQ(e,t,i)>=0)return!1;let r=e.x,n=t.x,s=i.x,a=e.y,o=t.y,h=i.y,l=r<n?r<s?r:s:n<s?n:s,u=a<o?a<h?a:h:o<h?o:h,c=r>n?r>s?r:s:n>s?n:s,d=a>o?a>h?a:h:o>h?o:h,p=i.next;for(;p!==e;){if(p.x>=l&&p.x<=c&&p.y>=u&&p.y<=d&&eX(r,a,n,o,s,h,p.x,p.y)&&eQ(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}(e)){i.push(l.i/r|0),i.push(e.i/r|0),i.push(u.i/r|0),e4(e),e=u.next,h=u.next;continue}if((e=u)===h){o?1===o?t(e=function(t,e,i){let r=t;do{let n=r.prev,s=r.next.next;!eK(n,s)&&e$(n,r,r.next,s)&&e2(n,s)&&e2(s,n)&&(e.push(n.i/i|0),e.push(r.i/i|0),e.push(s.i/i|0),e4(r),e4(r.next),r=t=s),r=r.next}while(r!==t);return eG(r)}(eG(e),i,r),i,r,n,s,a,2):2===o&&function(e,i,r,n,s,a){let o=e;do{let e=o.next.next;for(;e!==o.prev;){var h,l;if(o.i!==e.i&&(h=o,l=e,h.next.i!==l.i&&h.prev.i!==l.i&&!function(t,e){let i=t;do{if(i.i!==t.i&&i.next.i!==t.i&&i.i!==e.i&&i.next.i!==e.i&&e$(i,i.next,t,e))return!0;i=i.next}while(i!==t);return!1}(h,l)&&(e2(h,l)&&e2(l,h)&&function(t,e){let i=t,r=!1,n=(t.x+e.x)/2,s=(t.y+e.y)/2;do i.y>s!=i.next.y>s&&i.next.y!==i.y&&n<(i.next.x-i.x)*(s-i.y)/(i.next.y-i.y)+i.x&&(r=!r),i=i.next;while(i!==t);return r}(h,l)&&(eQ(h.prev,h,l.prev)||eQ(h,l.prev,l))||eK(h,l)&&eQ(h.prev,h,h.next)>0&&eQ(l.prev,l,l.next)>0))){let h=e3(o,e);o=eG(o,o.next),h=eG(h,h.next),t(o,i,r,n,s,a,0),t(h,i,r,n,s,a,0);return}e=e.next}o=o.next}while(o!==e)}(e,i,r,n,s,a):t(eG(e),i,r,n,s,a,1);break}}}(d,p,i,r,n,l,0),p};function ej(t,e,i,r,n){let s,a;if(n===function(t,e,i,r){let n=0;for(let s=e,a=i-r;s<i;s+=r)n+=(t[a]-t[s])*(t[s+1]+t[a+1]),a=s;return n}(t,e,i,r)>0)for(s=e;s<i;s+=r)a=e5(s,t[s],t[s+1],a);else for(s=i-r;s>=e;s-=r)a=e5(s,t[s],t[s+1],a);return a&&eK(a,a.next)&&(e4(a),a=a.next),a}function eG(t,e){if(!t)return t;e||(e=t);let i=t,r;do if(r=!1,!i.steiner&&(eK(i,i.next)||0===eQ(i.prev,i,i.next))){if(e4(i),(i=e=i.prev)===i.next)break;r=!0}else i=i.next;while(r||i!==e);return e}function eZ(t,e){return t.x-e.x}function eY(t,e,i,r,n){return(t=((t=((t=((t=((t=(t-i)*n|0)|t<<8)&16711935)|t<<4)&252645135)|t<<2)&858993459)|t<<1)&1431655765)|(e=((e=((e=((e=((e=(e-r)*n|0)|e<<8)&16711935)|e<<4)&252645135)|e<<2)&858993459)|e<<1)&1431655765)<<1}function eX(t,e,i,r,n,s,a,o){return(n-a)*(e-o)>=(t-a)*(s-o)&&(t-a)*(r-o)>=(i-a)*(e-o)&&(i-a)*(s-o)>=(n-a)*(r-o)}function eQ(t,e,i){return(e.y-t.y)*(i.x-e.x)-(e.x-t.x)*(i.y-e.y)}function eK(t,e){return t.x===e.x&&t.y===e.y}function e$(t,e,i,r){let n=e1(eQ(t,e,i)),s=e1(eQ(t,e,r)),a=e1(eQ(i,r,t)),o=e1(eQ(i,r,e));return!!(n!==s&&a!==o||0===n&&e0(t,i,e)||0===s&&e0(t,r,e)||0===a&&e0(i,t,r)||0===o&&e0(i,e,r))}function e0(t,e,i){return e.x<=Math.max(t.x,i.x)&&e.x>=Math.min(t.x,i.x)&&e.y<=Math.max(t.y,i.y)&&e.y>=Math.min(t.y,i.y)}function e1(t){return t>0?1:t<0?-1:0}function e2(t,e){return 0>eQ(t.prev,t,t.next)?eQ(t,e,t.next)>=0&&eQ(t,t.prev,e)>=0:0>eQ(t,e,t.prev)||0>eQ(t,t.next,e)}function e3(t,e){let i=new e6(t.i,t.x,t.y),r=new e6(e.i,e.x,e.y),n=t.next,s=e.prev;return t.next=e,e.prev=t,i.next=n,n.prev=i,r.next=i,i.prev=r,s.next=r,r.prev=s,r}function e5(t,e,i,r){let n=new e6(t,e,i);return r?(n.next=r.next,n.prev=r,r.next.prev=n,r.next=n):(n.prev=n,n.next=n),n}function e4(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function e6(t,e,i){this.i=t,this.x=e,this.y=i,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}class e7{static area(t){let e=t.length,i=0;for(let r=e-1,n=0;n<e;r=n++)i+=t[r].x*t[n].y-t[n].x*t[r].y;return .5*i}static isClockWise(t){return 0>e7.area(t)}static triangulateShape(t,e){let i=[],r=[],n=[];e9(t),e8(i,t);let s=t.length;e.forEach(e9);for(let t=0;t<e.length;t++)r.push(s),s+=e[t].length,e8(i,e[t]);let a=eH(i,r);for(let t=0;t<a.length;t+=3)n.push(a.slice(t,t+3));return n}}function e9(t){let e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function e8(t,e){for(let i=0;i<e.length;i++)t.push(e[i].x),t.push(e[i].y)}class it extends eo{constructor(t=new eJ([new y(.5,.5),new y(-.5,.5),new y(-.5,-.5),new y(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];let i=this,r=[],n=[];for(let s=0,a=t.length;s<a;s++)!function(t){let s,a,o,h;let l=[],u=void 0!==e.curveSegments?e.curveSegments:12,c=void 0!==e.steps?e.steps:1,d=void 0!==e.depth?e.depth:1,p=void 0===e.bevelEnabled||e.bevelEnabled,m=void 0!==e.bevelThickness?e.bevelThickness:.2,f=void 0!==e.bevelSize?e.bevelSize:m-.1,g=void 0!==e.bevelOffset?e.bevelOffset:0,x=void 0!==e.bevelSegments?e.bevelSegments:3,_=e.extrudePath,v=void 0!==e.UVGenerator?e.UVGenerator:ie,b,w=!1;_&&(b=_.getSpacedPoints(c),w=!0,p=!1,s=_.computeFrenetFrames(c,!1),a=new V,o=new V,h=new V),p||(x=0,m=0,f=0,g=0);let M=t.extractPoints(u),S=M.shape,z=M.holes;if(!e7.isClockWise(S)){S=S.reverse();for(let t=0,e=z.length;t<e;t++){let e=z[t];e7.isClockWise(e)&&(z[t]=e.reverse())}}let A=e7.triangulateShape(S,z),C=S;for(let t=0,e=z.length;t<e;t++){let e=z[t];S=S.concat(e)}function P(t,e,i){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().addScaledVector(e,i)}let T=S.length,E=A.length;function k(t,e,i){let r,n,s;let a=t.x-e.x,o=t.y-e.y,h=i.x-t.x,l=i.y-t.y,u=a*a+o*o;if(Math.abs(a*l-o*h)>Number.EPSILON){let c=Math.sqrt(u),d=Math.sqrt(h*h+l*l),p=e.x-o/c,m=e.y+a/c,f=((i.x-l/d-p)*l-(i.y+h/d-m)*h)/(a*l-o*h),g=(r=p+a*f-t.x)*r+(n=m+o*f-t.y)*n;if(g<=2)return new y(r,n);s=Math.sqrt(g/2)}else{let t=!1;a>Number.EPSILON?h>Number.EPSILON&&(t=!0):a<-Number.EPSILON?h<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(l)&&(t=!0),t?(r=-o,n=a,s=Math.sqrt(u)):(r=a,n=o,s=Math.sqrt(u/2))}return new y(r/s,n/s)}let N=[];for(let t=0,e=C.length,i=e-1,r=t+1;t<e;t++,i++,r++)i===e&&(i=0),r===e&&(r=0),N[t]=k(C[t],C[i],C[r]);let R=[],O,I=N.concat();for(let t=0,e=z.length;t<e;t++){let e=z[t];O=[];for(let t=0,i=e.length,r=i-1,n=t+1;t<i;t++,r++,n++)r===i&&(r=0),n===i&&(n=0),O[t]=k(e[t],e[r],e[n]);R.push(O),I=I.concat(O)}for(let t=0;t<x;t++){let e=t/x,i=m*Math.cos(e*Math.PI/2),r=f*Math.sin(e*Math.PI/2)+g;for(let t=0,e=C.length;t<e;t++){let e=P(C[t],N[t],r);U(e.x,e.y,-i)}for(let t=0,e=z.length;t<e;t++){let e=z[t];O=R[t];for(let t=0,n=e.length;t<n;t++){let n=P(e[t],O[t],r);U(n.x,n.y,-i)}}}let B=f+g;for(let t=0;t<T;t++){let e=p?P(S[t],I[t],B):S[t];w?(o.copy(s.normals[0]).multiplyScalar(e.x),a.copy(s.binormals[0]).multiplyScalar(e.y),h.copy(b[0]).add(o).add(a),U(h.x,h.y,h.z)):U(e.x,e.y,0)}for(let t=1;t<=c;t++)for(let e=0;e<T;e++){let i=p?P(S[e],I[e],B):S[e];w?(o.copy(s.normals[t]).multiplyScalar(i.x),a.copy(s.binormals[t]).multiplyScalar(i.y),h.copy(b[t]).add(o).add(a),U(h.x,h.y,h.z)):U(i.x,i.y,d/c*t)}for(let t=x-1;t>=0;t--){let e=t/x,i=m*Math.cos(e*Math.PI/2),r=f*Math.sin(e*Math.PI/2)+g;for(let t=0,e=C.length;t<e;t++){let e=P(C[t],N[t],r);U(e.x,e.y,d+i)}for(let t=0,e=z.length;t<e;t++){let e=z[t];O=R[t];for(let t=0,n=e.length;t<n;t++){let n=P(e[t],O[t],r);w?U(n.x,n.y+b[c-1].y,b[c-1].x+i):U(n.x,n.y,d+i)}}}function L(t,e){let n=t.length;for(;--n>=0;){let s=n,a=n-1;a<0&&(a=t.length-1);for(let t=0,n=c+2*x;t<n;t++){let n=T*t,o=T*(t+1);!function(t,e,n,s){F(t),F(e),F(s),F(e),F(n),F(s);let a=r.length/3,o=v.generateSideWallUV(i,r,a-6,a-3,a-2,a-1);q(o[0]),q(o[1]),q(o[3]),q(o[1]),q(o[2]),q(o[3])}(e+s+n,e+a+n,e+a+o,e+s+o)}}}function U(t,e,i){l.push(t),l.push(e),l.push(i)}function D(t,e,n){F(t),F(e),F(n);let s=r.length/3,a=v.generateTopUV(i,r,s-3,s-2,s-1);q(a[0]),q(a[1]),q(a[2])}function F(t){r.push(l[3*t+0]),r.push(l[3*t+1]),r.push(l[3*t+2])}function q(t){n.push(t.x),n.push(t.y)}(function(){let t=r.length/3;if(p){let t=0*T;for(let e=0;e<E;e++){let i=A[e];D(i[2]+t,i[1]+t,i[0]+t)}t=T*(c+2*x);for(let e=0;e<E;e++){let i=A[e];D(i[0]+t,i[1]+t,i[2]+t)}}else{for(let t=0;t<E;t++){let e=A[t];D(e[2],e[1],e[0])}for(let t=0;t<E;t++){let e=A[t];D(e[0]+T*c,e[1]+T*c,e[2]+T*c)}}i.addGroup(t,r.length/3-t,0)})(),function(){let t=r.length/3,e=0;L(C,0),e+=C.length;for(let t=0,i=z.length;t<i;t++){let i=z[t];L(i,e),e+=i.length}i.addGroup(t,r.length/3-t,1)}()}(t[s]);this.setAttribute("position",new t8(r,3)),this.setAttribute("uv",new t8(n,2)),this.computeVertexNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){let t=super.toJSON();return function(t,e,i){if(i.shapes=[],Array.isArray(t))for(let e=0,r=t.length;e<r;e++){let r=t[e];i.shapes.push(r.uuid)}else i.shapes.push(t.uuid);return i.options=Object.assign({},e),void 0!==e.extrudePath&&(i.options.extrudePath=e.extrudePath.toJSON()),i}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,e){let i=[];for(let r=0,n=t.shapes.length;r<n;r++){let n=e[t.shapes[r]];i.push(n)}let r=t.options.extrudePath;return void 0!==r&&(t.options.extrudePath=new eO[r.type]().fromJSON(r)),new it(i,t.options)}}let ie={generateTopUV:function(t,e,i,r,n){let s=e[3*i],a=e[3*i+1],o=e[3*r],h=e[3*r+1],l=e[3*n],u=e[3*n+1];return[new y(s,a),new y(o,h),new y(l,u)]},generateSideWallUV:function(t,e,i,r,n,s){let a=e[3*i],o=e[3*i+1],h=e[3*i+2],l=e[3*r],u=e[3*r+1],c=e[3*r+2],d=e[3*n],p=e[3*n+1],m=e[3*n+2],f=e[3*s],g=e[3*s+1],x=e[3*s+2];return Math.abs(o-u)<Math.abs(a-l)?[new y(a,1-h),new y(l,1-c),new y(d,1-m),new y(f,1-x)]:[new y(o,1-h),new y(u,1-c),new y(p,1-m),new y(g,1-x)]}};class ii extends eq{constructor(t=1,e=0){let i=(1+Math.sqrt(5))/2;super([-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new ii(t.radius,t.detail)}}class ir extends eq{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new ir(t.radius,t.detail)}}class is extends eo{constructor(t=.5,e=1,i=32,r=1,n=0,s=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:r,thetaStart:n,thetaLength:s},i=Math.max(3,i);let a=[],o=[],h=[],l=[],u=t,c=(e-t)/(r=Math.max(1,r)),d=new V,p=new y;for(let t=0;t<=r;t++){for(let t=0;t<=i;t++){let r=n+t/i*s;d.x=u*Math.cos(r),d.y=u*Math.sin(r),o.push(d.x,d.y,d.z),h.push(0,0,1),p.x=(d.x/e+1)/2,p.y=(d.y/e+1)/2,l.push(p.x,p.y)}u+=c}for(let t=0;t<r;t++){let e=t*(i+1);for(let t=0;t<i;t++){let r=t+e,n=r+i+1,s=r+i+2,o=r+1;a.push(r,n,o),a.push(n,s,o)}}this.setIndex(a),this.setAttribute("position",new t8(o,3)),this.setAttribute("normal",new t8(h,3)),this.setAttribute("uv",new t8(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new is(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class ia extends eo{constructor(t=new eJ([new y(0,.5),new y(-.5,-.5),new y(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};let i=[],r=[],n=[],s=[],a=0,o=0;if(!1===Array.isArray(t))h(t);else for(let e=0;e<t.length;e++)h(t[e]),this.addGroup(a,o,e),a+=o,o=0;function h(t){let a=r.length/3,h=t.extractPoints(e),l=h.shape,u=h.holes;!1===e7.isClockWise(l)&&(l=l.reverse());for(let t=0,e=u.length;t<e;t++){let e=u[t];!0===e7.isClockWise(e)&&(u[t]=e.reverse())}let c=e7.triangulateShape(l,u);for(let t=0,e=u.length;t<e;t++){let e=u[t];l=l.concat(e)}for(let t=0,e=l.length;t<e;t++){let e=l[t];r.push(e.x,e.y,0),n.push(0,0,1),s.push(e.x,e.y)}for(let t=0,e=c.length;t<e;t++){let e=c[t],r=e[0]+a,n=e[1]+a,s=e[2]+a;i.push(r,n,s),o+=3}}this.setIndex(i),this.setAttribute("position",new t8(r,3)),this.setAttribute("normal",new t8(n,3)),this.setAttribute("uv",new t8(s,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){let t=super.toJSON();return function(t,e){if(e.shapes=[],Array.isArray(t))for(let i=0,r=t.length;i<r;i++){let r=t[i];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}static fromJSON(t,e){let i=[];for(let r=0,n=t.shapes.length;r<n;r++){let n=e[t.shapes[r]];i.push(n)}return new ia(i,t.curveSegments)}}class io extends eo{constructor(t=1,e=32,i=16,r=0,n=2*Math.PI,s=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:r,phiLength:n,thetaStart:s,thetaLength:a},e=Math.max(3,Math.floor(e)),i=Math.max(2,Math.floor(i));let o=Math.min(s+a,Math.PI),h=0,l=[],u=new V,c=new V,d=[],p=[],m=[],f=[];for(let d=0;d<=i;d++){let g=[],y=d/i,x=0;0===d&&0===s?x=.5/e:d===i&&o===Math.PI&&(x=-.5/e);for(let i=0;i<=e;i++){let o=i/e;u.x=-t*Math.cos(r+o*n)*Math.sin(s+y*a),u.y=t*Math.cos(s+y*a),u.z=t*Math.sin(r+o*n)*Math.sin(s+y*a),p.push(u.x,u.y,u.z),c.copy(u).normalize(),m.push(c.x,c.y,c.z),f.push(o+x,1-y),g.push(h++)}l.push(g)}for(let t=0;t<i;t++)for(let r=0;r<e;r++){let e=l[t][r+1],n=l[t][r],a=l[t+1][r],h=l[t+1][r+1];(0!==t||s>0)&&d.push(e,n,h),(t!==i-1||o<Math.PI)&&d.push(n,a,h)}this.setIndex(d),this.setAttribute("position",new t8(p,3)),this.setAttribute("normal",new t8(m,3)),this.setAttribute("uv",new t8(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new io(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class ih extends eq{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new ih(t.radius,t.detail)}}class il extends eo{constructor(t=1,e=.4,i=12,r=48,n=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:r,arc:n},i=Math.floor(i),r=Math.floor(r);let s=[],a=[],o=[],h=[],l=new V,u=new V,c=new V;for(let s=0;s<=i;s++)for(let d=0;d<=r;d++){let p=d/r*n,m=s/i*Math.PI*2;u.x=(t+e*Math.cos(m))*Math.cos(p),u.y=(t+e*Math.cos(m))*Math.sin(p),u.z=e*Math.sin(m),a.push(u.x,u.y,u.z),l.x=t*Math.cos(p),l.y=t*Math.sin(p),c.subVectors(u,l).normalize(),o.push(c.x,c.y,c.z),h.push(d/r),h.push(s/i)}for(let t=1;t<=i;t++)for(let e=1;e<=r;e++){let i=(r+1)*t+e-1,n=(r+1)*(t-1)+e-1,a=(r+1)*(t-1)+e,o=(r+1)*t+e;s.push(i,n,o),s.push(n,a,o)}this.setIndex(s),this.setAttribute("position",new t8(a,3)),this.setAttribute("normal",new t8(o,3)),this.setAttribute("uv",new t8(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new il(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class iu extends eo{constructor(t=1,e=.4,i=64,r=8,n=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:r,p:n,q:s},i=Math.floor(i),r=Math.floor(r);let a=[],o=[],h=[],l=[],u=new V,c=new V,d=new V,p=new V,m=new V,f=new V,g=new V;for(let a=0;a<=i;++a){let x=a/i*n*Math.PI*2;y(x,n,s,t,d),y(x+.01,n,s,t,p),f.subVectors(p,d),g.addVectors(p,d),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let t=0;t<=r;++t){let n=t/r*Math.PI*2,s=-e*Math.cos(n),p=e*Math.sin(n);u.x=d.x+(s*g.x+p*m.x),u.y=d.y+(s*g.y+p*m.y),u.z=d.z+(s*g.z+p*m.z),o.push(u.x,u.y,u.z),c.subVectors(u,d).normalize(),h.push(c.x,c.y,c.z),l.push(a/i),l.push(t/r)}}for(let t=1;t<=i;t++)for(let e=1;e<=r;e++){let i=(r+1)*(t-1)+(e-1),n=(r+1)*t+(e-1),s=(r+1)*t+e,o=(r+1)*(t-1)+e;a.push(i,n,o),a.push(n,s,o)}function y(t,e,i,r,n){let s=i/e*t,a=Math.cos(s);n.x=r*(2+a)*.5*Math.cos(t),n.y=r*(2+a)*Math.sin(t)*.5,n.z=r*Math.sin(s)*.5}this.setIndex(a),this.setAttribute("position",new t8(o,3)),this.setAttribute("normal",new t8(h,3)),this.setAttribute("uv",new t8(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new iu(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class ic extends eo{constructor(t=new eN(new V(-1,-1,0),new V(-1,1,0),new V(1,1,0)),e=64,i=1,r=8,n=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:i,radialSegments:r,closed:n};let s=t.computeFrenetFrames(e,n);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;let a=new V,o=new V,h=new y,l=new V,u=[],c=[],d=[],p=[];function m(n){l=t.getPointAt(n/e,l);let h=s.normals[n],d=s.binormals[n];for(let t=0;t<=r;t++){let e=t/r*Math.PI*2,n=Math.sin(e),s=-Math.cos(e);o.x=s*h.x+n*d.x,o.y=s*h.y+n*d.y,o.z=s*h.z+n*d.z,o.normalize(),c.push(o.x,o.y,o.z),a.x=l.x+i*o.x,a.y=l.y+i*o.y,a.z=l.z+i*o.z,u.push(a.x,a.y,a.z)}}(function(){for(let t=0;t<e;t++)m(t);m(!1===n?e:0),function(){for(let t=0;t<=e;t++)for(let i=0;i<=r;i++)h.x=t/e,h.y=i/r,d.push(h.x,h.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=r;e++){let i=(r+1)*(t-1)+(e-1),n=(r+1)*t+(e-1),s=(r+1)*t+e,a=(r+1)*(t-1)+e;p.push(i,n,a),p.push(n,s,a)}}()})(),this.setIndex(p),this.setAttribute("position",new t8(u,3)),this.setAttribute("normal",new t8(c,3)),this.setAttribute("uv",new t8(d,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){let t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new ic(new eO[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}function id(t,e,i){return t&&(i||t.constructor!==e)?"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t):t}class ip{constructor(t,e,i,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(i),this.sampleValues=e,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(t){let e=this.parameterPositions,i=this._cachedIndex,r=e[i],n=e[i-1];t:{e:{let s;i:{r:if(!(t<r)){for(let s=i+2;;){if(void 0===r){if(t<n)break r;return i=e.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===s)break;if(n=r,t<(r=e[++i]))break e}s=e.length;break i}if(!(t>=n)){let a=e[1];t<a&&(i=2,n=a);for(let s=i-2;;){if(void 0===n)return this._cachedIndex=0,this.copySampleValue_(0);if(i===s)break;if(r=n,t>=(n=e[--i-1]))break e}s=i,i=0;break i}break t}for(;i<s;){let r=i+s>>>1;t<e[r]?s=r:i=r+1}if(r=e[i],void 0===(n=e[i-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===r)return i=e.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,n,r)}return this.interpolate_(i,n,t,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){let e=this.resultBuffer,i=this.sampleValues,r=this.valueSize,n=t*r;for(let t=0;t!==r;++t)e[t]=i[n+t];return e}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}class im extends ip{constructor(t,e,i,r){super(t,e,i,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(t,e,i){let r=this.parameterPositions,n=t-2,s=t+1,a=r[n],o=r[s];if(void 0===a)switch(this.getSettings_().endingStart){case 2401:n=t,a=2*e-i;break;case 2402:n=r.length-2,a=e+r[n]-r[n+1];break;default:n=t,a=i}if(void 0===o)switch(this.getSettings_().endingEnd){case 2401:s=t,o=2*i-e;break;case 2402:s=1,o=i+r[1]-r[0];break;default:s=t-1,o=e}let h=(i-e)*.5,l=this.valueSize;this._weightPrev=h/(e-a),this._weightNext=h/(o-i),this._offsetPrev=n*l,this._offsetNext=s*l}interpolate_(t,e,i,r){let n=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,h=o-a,l=this._offsetPrev,u=this._offsetNext,c=this._weightPrev,d=this._weightNext,p=(i-e)/(r-e),m=p*p,f=m*p,g=-c*f+2*c*m-c*p,y=(1+c)*f+(-1.5-2*c)*m+(-.5+c)*p+1,x=(-1-d)*f+(1.5+d)*m+.5*p,_=d*f-d*m;for(let t=0;t!==a;++t)n[t]=g*s[l+t]+y*s[h+t]+x*s[o+t]+_*s[u+t];return n}}class ig extends ip{constructor(t,e,i,r){super(t,e,i,r)}interpolate_(t,e,i,r){let n=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,h=o-a,l=(i-e)/(r-e),u=1-l;for(let t=0;t!==a;++t)n[t]=s[h+t]*u+s[o+t]*l;return n}}class iy extends ip{constructor(t,e,i,r){super(t,e,i,r)}interpolate_(t){return this.copySampleValue_(t-1)}}class ix{constructor(t,e,i,r){if(void 0===t)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=id(e,this.TimeBufferType),this.values=id(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(t){let e;let i=t.constructor;if(i.toJSON!==this.toJSON)e=i.toJSON(t);else{e={name:t.name,times:id(t.times,Array),values:id(t.values,Array)};let i=t.getInterpolation();i!==t.DefaultInterpolation&&(e.interpolation=i)}return e.type=t.ValueTypeName,e}InterpolantFactoryMethodDiscrete(t){return new iy(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new ig(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new im(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case 2300:e=this.InterpolantFactoryMethodDiscrete;break;case 2301:e=this.InterpolantFactoryMethodLinear;break;case 2302:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){let e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(e)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){let e=this.times;for(let i=0,r=e.length;i!==r;++i)e[i]+=t}return this}scale(t){if(1!==t){let e=this.times;for(let i=0,r=e.length;i!==r;++i)e[i]*=t}return this}trim(t,e){let i=this.times,r=i.length,n=0,s=r-1;for(;n!==r&&i[n]<t;)++n;for(;-1!==s&&i[s]>e;)--s;if(++s,0!==n||s!==r){n>=s&&(n=(s=Math.max(s,1))-1);let t=this.getValueSize();this.times=i.slice(n,s),this.values=this.values.slice(n*t,s*t)}return this}validate(){let t=!0,e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);let i=this.times,r=this.values,n=i.length;0===n&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let s=null;for(let e=0;e!==n;e++){let r=i[e];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,r),t=!1;break}if(null!==s&&s>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,r,s),t=!1;break}s=r}if(void 0!==r&&ArrayBuffer.isView(r)&&!(r instanceof DataView))for(let e=0,i=r.length;e!==i;++e){let i=r[e];if(isNaN(i)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,i),t=!1;break}}return t}optimize(){let t=this.times.slice(),e=this.values.slice(),i=this.getValueSize(),r=2302===this.getInterpolation(),n=t.length-1,s=1;for(let a=1;a<n;++a){let n=!1,o=t[a];if(o!==t[a+1]&&(1!==a||o!==t[0])){if(r)n=!0;else{let t=a*i,r=t-i,s=t+i;for(let a=0;a!==i;++a){let i=e[t+a];if(i!==e[r+a]||i!==e[s+a]){n=!0;break}}}}if(n){if(a!==s){t[s]=t[a];let r=a*i,n=s*i;for(let t=0;t!==i;++t)e[n+t]=e[r+t]}++s}}if(n>0){t[s]=t[n];for(let t=n*i,r=s*i,a=0;a!==i;++a)e[r+a]=e[t+a];++s}return s!==t.length?(this.times=t.slice(0,s),this.values=e.slice(0,s*i)):(this.times=t,this.values=e),this}clone(){let t=this.times.slice(),e=this.values.slice(),i=new this.constructor(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}ix.prototype.TimeBufferType=Float32Array,ix.prototype.ValueBufferType=Float32Array,ix.prototype.DefaultInterpolation=2301;class i_ extends ix{constructor(t,e,i){super(t,e,i)}}i_.prototype.ValueTypeName="bool",i_.prototype.ValueBufferType=Array,i_.prototype.DefaultInterpolation=2300,i_.prototype.InterpolantFactoryMethodLinear=void 0,i_.prototype.InterpolantFactoryMethodSmooth=void 0;class iv extends ix{}iv.prototype.ValueTypeName="color";class ib extends ix{}ib.prototype.ValueTypeName="number";class iw extends ip{constructor(t,e,i,r){super(t,e,i,r)}interpolate_(t,e,i,r){let n=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(i-e)/(r-e),h=t*a;for(let t=h+a;h!==t;h+=4)B.slerpFlat(n,0,s,h-a,s,h,o);return n}}class iM extends ix{InterpolantFactoryMethodLinear(t){return new iw(this.times,this.values,this.getValueSize(),t)}}iM.prototype.ValueTypeName="quaternion",iM.prototype.InterpolantFactoryMethodSmooth=void 0;class iS extends ix{constructor(t,e,i){super(t,e,i)}}iS.prototype.ValueTypeName="string",iS.prototype.ValueBufferType=Array,iS.prototype.DefaultInterpolation=2300,iS.prototype.InterpolantFactoryMethodLinear=void 0,iS.prototype.InterpolantFactoryMethodSmooth=void 0;class iz extends ix{}iz.prototype.ValueTypeName="vector";class iA{constructor(t,e,i){let r;let n=this,s=!1,a=0,o=0,h=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(t){o++,!1===s&&void 0!==n.onStart&&n.onStart(t,a,o),s=!0},this.itemEnd=function(t){a++,void 0!==n.onProgress&&n.onProgress(t,a,o),a===o&&(s=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(t){void 0!==n.onError&&n.onError(t)},this.resolveURL=function(t){return r?r(t):t},this.setURLModifier=function(t){return r=t,this},this.addHandler=function(t,e){return h.push(t,e),this},this.removeHandler=function(t){let e=h.indexOf(t);return -1!==e&&h.splice(e,2),this},this.getHandler=function(t){for(let e=0,i=h.length;e<i;e+=2){let i=h[e],r=h[e+1];if(i.global&&(i.lastIndex=0),i.test(t))return r}return null}}}let iC=new iA;class iP{constructor(t){this.manager=void 0!==t?t:iC,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){let i=this;return new Promise(function(r,n){i.load(t,r,e,n)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}iP.DEFAULT_MATERIAL_NAME="__DEFAULT";let iT="\\[\\]\\.:\\/",iE=RegExp("["+iT+"]","g"),ik="[^"+iT+"]",iN="[^"+iT.replace("\\.","")+"]",iR=/((?:WC+[\/:])*)/.source.replace("WC",ik),iO=RegExp("^"+iR+/(WCOD+)?/.source.replace("WCOD",iN)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",ik)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",ik)+"$"),iI=["material","materials","bones","map"];class iB{constructor(t,e,i){let r=i||iV.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,r)}getValue(t,e){this.bind();let i=this._targetGroup.nCachedObjects_,r=this._bindings[i];void 0!==r&&r.getValue(t,e)}setValue(t,e){let i=this._bindings;for(let r=this._targetGroup.nCachedObjects_,n=i.length;r!==n;++r)i[r].setValue(t,e)}bind(){let t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()}unbind(){let t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}}class iV{constructor(t,e,i){this.path=e,this.parsedPath=i||iV.parseTrackName(e),this.node=iV.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,i){return t&&t.isAnimationObjectGroup?new iV.Composite(t,e,i):new iV(t,e,i)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(iE,"")}static parseTrackName(t){let e=iO.exec(t);if(null===e)throw Error("PropertyBinding: Cannot parse trackName: "+t);let i={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){let t=i.nodeName.substring(r+1);-1!==iI.indexOf(t)&&(i.nodeName=i.nodeName.substring(0,r),i.objectName=t)}if(null===i.propertyName||0===i.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){let i=t.skeleton.getBoneByName(e);if(void 0!==i)return i}if(t.children){let i=function(t){for(let r=0;r<t.length;r++){let n=t[r];if(n.name===e||n.uuid===e)return n;let s=i(n.children);if(s)return s}return null},r=i(t.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){let i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)t[e++]=i[r]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){let i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)i[r]=t[e++]}_setValue_array_setNeedsUpdate(t,e){let i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)i[r]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){let i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)i[r]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node,e=this.parsedPath,i=e.objectName,r=e.propertyName,n=e.propertyIndex;if(t||(t=iV.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(i){let r=e.objectIndex;switch(i){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===r){r=e;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(void 0===t[i]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[i]}if(void 0!==r){if(void 0===t[r]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[r]}}let s=t[r];if(void 0===s){console.error("THREE.PropertyBinding: Trying to update property for track: "+e.nodeName+"."+r+" but it wasn't found.",t);return}let a=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==n){if("morphTargetInfluences"===r){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==t.morphTargetDictionary[n]&&(n=t.morphTargetDictionary[n])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=n}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}iV.Composite=iB,iV.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},iV.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},iV.prototype.GetterByBindingType=[iV.prototype._getValue_direct,iV.prototype._getValue_array,iV.prototype._getValue_arrayElement,iV.prototype._getValue_toArray],iV.prototype.SetterByBindingTypeAndVersioning=[[iV.prototype._setValue_direct,iV.prototype._setValue_direct_setNeedsUpdate,iV.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[iV.prototype._setValue_array,iV.prototype._setValue_array_setNeedsUpdate,iV.prototype._setValue_array_setMatrixWorldNeedsUpdate],[iV.prototype._setValue_arrayElement,iV.prototype._setValue_arrayElement_setNeedsUpdate,iV.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[iV.prototype._setValue_fromArray,iV.prototype._setValue_fromArray_setNeedsUpdate,iV.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1),"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"168"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="168")}}]);